{"command.comments.category":"コメント","command.issue.continueWorking.title":"問題に対する作業の続行","command.issue.copyGithubDevLink.title":"github.dev リンクのコピー","command.issue.copyGithubHeadLink.title":"GitHub ヘッド リンクのコピー","command.issue.copyGithubPermalink.title":"GitHub Permalink のコピー","command.issue.copyIssueNumber.title":"問題番号のコピー","command.issue.copyIssueUrl.title":"問題リンクのコピー","command.issue.copyMarkdownGithubPermalink.title":"GitHub Permalink を Markdown としてコピーする","command.issue.createIssue.title":"イシューの作成","command.issue.createIssueFromClipboard.title":"クリップボードからイシューを作成","command.issue.createIssueFromFile.title":"イシューの作成","command.issue.createIssueFromSelection.title":"選択範囲からイシューを作成","command.issue.editQuery.title":"クエリの編集","command.issue.getCurrent.title":"現在の問題を取得する","command.issue.goToLinkedCode.title":"リンクされたコードに移動","command.issue.issueCompletion.title":"選択された問題の完了","command.issue.openGithubPermalink.title":"GitHub で Permalink を開く","command.issue.openIssue.title":"GitHub で問題を開く","command.issue.refresh.title":"更新","command.issue.signinAndRefreshList.title":"サインインと更新","command.issue.startWorking.title":"問題の処理を開始する","command.issue.startWorkingBranchDescriptiveTitle.title":"問題の作業を開始し、トピック ブランチをチェックアウトする","command.issue.startWorkingBranchPrompt.title":"作業を開始し、分岐を設定します...","command.issue.statusBar.title":"現在の問題のオプション","command.issue.stopWorking.title":"問題の処理を停止する","command.issue.stopWorkingBranchDescriptiveTitle.title":"問題の作業を停止し、トピック ブランチから退出する","command.issue.suggestRefresh.title":"更新候補","command.issue.userCompletion.title":"ユーザー入力候補が選択済み","command.issues.category":"GitHub の問題","command.issues.openIssuesWebsite.title":"GitHub 上で開く","command.pr.addAssigneesToNewPr.title":"担当者の追加","command.pr.addFileComment.title":"ファイルのコメントの追加","command.pr.addLabelsToNewPr.title":"ラベルの適用","command.pr.addMilestoneToNewPr.title":"マイルストーンの設定","command.pr.addReviewersToNewPr.title":"レビュー担当者の追加","command.pr.applySuggestion.title":"提案の適用","command.pr.cancelEditComment.title":"キャンセル","command.pr.checkoutByNumber.title":"番号による プル リクエスト のチェックアウト","command.pr.close.title":"プル リクエスト を閉じる","command.pr.collapseAllComments.title":"すべてのコメントを折りたたむ","command.pr.configurePRViewlet.title":"構成...","command.pr.configureRemotes.title":"リモートの構成...","command.pr.copyCommentLink.title":"コメント リンクのコピー","command.pr.copyCommitHash.title":"コミット ハッシュのコピー","command.pr.copyVscodeDevPrLink.title":"vscode.dev をコピーする pull request リンク","command.pr.create.title":"プル リクエスト の作成","command.pr.createComment.title":"レビュー コメントの追加","command.pr.createPrMenuCreate.title":"作成","command.pr.createPrMenuDraft.title":"ドラフトの作成","command.pr.createPrMenuMerge.title":"作成 + 自動マージ","command.pr.createPrMenuMergeWhenReady.title":"準備完了時に作成とマージを行う","command.pr.createPrMenuRebase.title":"作成 + 自動リベース","command.pr.createPrMenuSquash.title":"作成 + 自動スカッシュ","command.pr.createSingleComment.title":"コメントの追加","command.pr.deleteComment.title":"コメントの削除","command.pr.deleteLocalBranch.title":"ローカル ブランチ の削除","command.pr.deleteLocalBranchesNRemotes.title":"ローカル ブランチとリモートを削除する","command.pr.dismissNotification.title":"通知を無視","command.pr.editComment.title":"コメントの編集","command.pr.editQuery.title":"クエリの編集","command.pr.exit.title":"既定のブランチのチェックアウト","command.pr.goToNextDiffInPr.title":"Pull Request 内の次の差分に移動","command.pr.goToPreviousDiffInPr.title":"Pull Request 内の前の差分に移動する","command.pr.makeSuggestion.title":"提案する","command.pr.markFileAsViewed.title":"ファイルを表示済みにする","command.pr.merge.title":"プル リクエストのマージ","command.pr.openAllDiffs.title":"すべての差分を開く","command.pr.openChanges.title":"変更を開く","command.pr.openDescription.title":"プル リクエスト の説明の表示","command.pr.openDescriptionToTheSide.title":"プル リクエスト の説明をサイドに開く","command.pr.openDiffView.title":"差分ビューを開く","command.pr.openDiffViewFromEditor.title":"Pull Request Diff ビューを開く","command.pr.openFileOnGitHub.title":"GitHub でファイルを開く","command.pr.openModifiedFile.title":"変更されたファイルを開く","command.pr.openOriginalFile.title":"元のファイルを開く","command.pr.openPullRequestOnGitHub.title":"GitHub で プル リクエスト を開く","command.pr.openPullsWebsite.title":"GitHub 上で開く","command.pr.openReview.title":"レビューに移動","command.pr.pick.title":"プル リクエスト のチェックアウト","command.pr.pickOnVscodeDev.title":"vscode.dev で pull request をチェックアウトする","command.pr.readyForReview.title":"プル リクエスト のレビュー準備完了をマークする","command.pr.refreshActivePullRequest.title":"更新","command.pr.refreshChanges.title":"更新","command.pr.refreshComments.title":"Pull Request コメントの更新","command.pr.refreshDescription.title":"プル リクエスト の説明を更新する","command.pr.refreshList.title":"プル リクエスト リストの更新","command.pr.refreshPullRequest.title":"プル リクエスト の更新","command.pr.resetViewedFiles.title":"表示されたファイルのリセット","command.pr.resolveReviewThread.title":"会話を解決する","command.pr.saveComment.title":"保存","command.pr.setFileListLayoutAsFlat.title":"リストとして表示","command.pr.setFileListLayoutAsTree.title":"ツリーとして表示","command.pr.showDiffAll.title":"すべての変更を表示します","command.pr.showDiffSinceLastReview.title":"前回のレビュー以降の変更を表示する","command.pr.signin.title":"GitHub にサインイン","command.pr.signinAndRefreshList.title":"サインインと更新","command.pr.signinenterprise.title":"GitHub Enterprise にサインイン","command.pr.startReview.title":"レビューを開始する","command.pr.unmarkFileAsViewed.title":"ファイルを未表示としてマークする","command.pr.unresolveReviewThread.title":"未解決の会話","command.pull.request.category":"GitHub プルリクエスト","command.review.approve.title":"承認","command.review.approveOnDotCom.title":"github.com で承認","command.review.comment.title":"コメント","command.review.diffLocalWithPrHead.title":"Pull Request ヘッドとローカルを比較する","command.review.diffWithPrHead.title":"ベースと Pull Request ヘッドを比較する (読み取り専用)","command.review.openFile.title":"ファイルを開く","command.review.openLocalFile.title":"ファイルを開く","command.review.requestChanges.title":"変更の要求","command.review.requestChangesOnDotCom.title":"github.com で変更を要求","command.review.suggestDiff.title":"編集の提案","description":"GitHub の プル リクエスト および 問題プロバイダー","displayName":"GitHub プルリクエストと問題","githubIssues.assignWhenWorking.description":"作業中の問題を割り当てます。作業中の問題が現在開いているリポジトリにある場合にのみ適用されます。","githubIssues.createInsertFormat.description":"問題コードの作成アクションの実行時に、問題番号 (#1234 など) または完全な URL (https://github.com/owner/name/issues/1234 など) を挿入するかどうかを制御します。","githubIssues.createIssueTriggers.description":"‘コメントから問題を作成する’ コード アクションを表示する文字列。","githubIssues.createIssueTriggers.items":"'コメントから問題を作成する' コード アクションを有効にする文字列です。空白を含めることはできません。","githubIssues.ignoreCompletionTrigger.description":"'#' 文字を使用して問題の完了候補をトリガーすべきでない言語。","githubIssues.ignoreCompletionTrigger.items":"補充を発行する言語は '#' でトリガーしないでください。","githubIssues.ignoreMilestones.description":"問題を表示しないマイルストーン タイトルの配列。","githubIssues.ignoreUserCompletionTrigger.description":"'@' 文字を使用してユーザー入力候補をトリガーすべきでない言語。","githubIssues.ignoreUserCompletionTrigger.items":"ユーザー入力候補が '@' でトリガーすべきでない言語。","githubIssues.issueBranchTitle.markdownDescription":"問題の作業を開始するときに作成されるブランチの名前の詳細設定。 \n- '${user}' は現在ログインしているユーザー名 \nに置き換えられます。'${issueNumber}' は現在の問題番号 \nに置き換えられます。'${sanitizedIssueTitle}' は問題のタイトルに置き換えられ、スペースとサポートされていない文字 (https://git-scm.com/docs/git-check-ref-format) がすべて削除されます","githubIssues.issueCompletionFormatScm.markdownDescription":"SCM 入力ボックスの問題完了の形式を設定します。\n- '${user}' は、現在ログインしているユーザー名 \n- '${user}' に置き換えられます {issueNumber}' は現在の問題番号に置き換えられます \n- '${issueNumberLabel}' は、#numberまたは owner/repository#number として書式設定されたラベルに置き換えられます","githubIssues.issueCompletions.enabled.description":"問題の完了候補を表示するかどうかを制御します。","githubIssues.queries.default.createdIssues":"作成された問題","githubIssues.queries.default.myIssues":"自分の問題","githubIssues.queries.default.recentIssues":"最近の問題","githubIssues.queries.label":"問題ツリーにクエリ用に表示するラベル。","githubIssues.queries.markdownDescription":"[GitHub search syntax](https://help.github.com/en/articles/understanding-the-search-syntax) と変数を使用して、GitHub 問題 ツリーで使用するクエリを指定します。一覧表示された最初のクエリは、問題 ビューで展開されます。「既定」クエリには、マイルストーンによって割り当てられた問題が含まれます。これらを保持する場合は、設定を変更するときに配列に残っていることを確認します。","githubIssues.queries.query":"変数を含む [GitHub 検索構文](https://help.github.com/en/articles/understanding-the-search-syntax) を使用した検索クエリ。変数 '${user}' を使用して、検索内のログイン ユーザーを指定できます。'${owner}' と '${repository}' を使用すると、'repo:${owner}/${repository}' を使用してリポジトリを指定できます。","githubIssues.useBranchForIssues.markdownDescription":"問題に取り組むときにブランチをチェックアウトするかどうかを決定します。ブランチの名前を構成するには、`#githubIssues.issueBranchTitle#` を設定します。","githubIssues.useBranchForIssues.off":"問題の処理を開始してもブランチは作成されません。以前に問題に取り組み、ブランチが作成された場合は、その同じブランチがチェックアウトされます。","githubIssues.useBranchForIssues.on":"問題の処理を開始すると、ブランチは常にチェックアウトされます。ブランチが存在しない場合は作成されます。","githubIssues.useBranchForIssues.prompt":"作成してチェックアウトするブランチの名前を設定するためのプロンプトが表示されます。","githubIssues.userCompletions.enabled.description":"ユーザーに対して入力候補を表示するかどうかを制御します。","githubIssues.workingIssueFormatScm.markdownDescription":"**問題の処理を開始する** 時に SCM 入力ボックスに設定されるコミット メッセージの形式を設定します。既定値は '${issueTitle} \nFixes #${issueNumber}' です","githubPullRequests.allowFetch.description":"pull request の更新を確認するときに、チェックアウト済みの pull request ブランチに対して 'git fetch' を実行できるようにします。","githubPullRequests.assignCreated.description":"この拡張機能で作成されたすべての プル リクエスト がこのユーザーに割り当てられます。自分に割り当てるには、'${user}' 変数を使用します。","githubPullRequests.commentExpandState.collapseAll":"すべてのコメントが折りたたまれます","githubPullRequests.commentExpandState.description":"コメントを含むドキュメントを開いたときにコメントを展開するかどうかを制御します。","githubPullRequests.commentExpandState.expandUnresolved":"未解決のコメントはすべて展開されます。","githubPullRequests.createDefaultBaseBranch.createdFromBranch":"The branch that the current branch was created from, if known","githubPullRequests.createDefaultBaseBranch.description":"Controls what the base branch picker defaults to when creating a pull request","githubPullRequests.createDefaultBaseBranch.repositoryDefault":"The default branch of the repository","githubPullRequests.createDraft":"プル 要求を作成するときに、既定で [下書き] チェック ボックスをオンにするかどうか。","githubPullRequests.createOnPublishBranch.ask":"ブランチの発行時にプル リクエストを作成するかどうかを確認します。","githubPullRequests.createOnPublishBranch.description":"ブランチが発行されたときにプル リクエストを作成します。","githubPullRequests.createOnPublishBranch.never":"ブランチが発行されるときにプル リクエストを作成しないでください。","githubPullRequests.defaultCommentType.description":"コメントを送信するときに使用する既定のコメントの種類で、アクティブなレビューはありません","githubPullRequests.defaultCommentType.review":"レビューが送信されると他のユーザーに表示されるレビュー コメントとしてコメントを送信します","githubPullRequests.defaultCommentType.single":"他のユーザーにすぐに表示される 1 つのコメントとしてコメントを送信します","githubPullRequests.defaultCreateOption.create":"pull requestが作成されます。","githubPullRequests.defaultCreateOption.createAutoMerge":"pull request は自動マージを有効にして作成されます。選択したマージ メソッドは、リポジトリの既定値、または設定されている場合は `githubPullRequests.defaultMergeMethod` の値になります。","githubPullRequests.defaultCreateOption.createDraft":"pull request はドラフトとして作成されます。","githubPullRequests.defaultCreateOption.description":"pull request の作成時に \"作成\" ボタンが既定で使用する作成オプション。","githubPullRequests.defaultCreateOption.lastUsed":"最近使用した作成オプション。","githubPullRequests.defaultDeletionMethod.selectLocalBranch.description":"true の場合、pull request からブランチを削除するときに、ローカル ブランチを削除するオプションが既定で選択されます。","githubPullRequests.defaultDeletionMethod.selectRemote.description":"true の場合、pull request からブランチを削除するときに、リモートを削除するオプションが既定で選択されます。","githubPullRequests.defaultMergeMethod.description":"pull request をマージするときに使用するメソッドです。","githubPullRequests.fileListLayout.description":"変更されたファイルの一覧を表示するときに使用するレイアウトです。","githubPullRequests.focusedMode.description":"プル要求がチェックアウトされるときに使用するレイアウト。レイアウトが変更されないようにするには、false に設定します。","githubPullRequests.ignoredPullRequestBranches.description":"pull request に関連付けられているブランチが自動的に検出されないようにします。これにより、これらのブランチでレビュー モードに入ることができなくなります。","githubPullRequests.ignoredPullRequestBranches.items":"ブランチ名","githubPullRequests.logLevel.description":"GitHub Pull Request 拡張機能のログを記録しています。ログは GitHub Pull Request という名前の出力チャネルに出力されます。","githubPullRequests.logLevel.markdownDeprecationMessage":"ログ レベルが [Developer: Set Log Level...](command:workbench.action.setLogLevel) コマンドによって制御されるようになりました。現在のセッションのログ レベルと、そこから既定のログ レベルを設定できます。","githubPullRequests.neverIgnoreDefaultBranch.description":"リポジトリの既定のブランチに関連付けられている pull 要求 を無視することはできません。","githubPullRequests.notifications.description":"GitHub 通知をユーザーに表示する必要がある場合。","githubPullRequests.overrideDefaultBranch.description":"リポジトリの既定のブランチが github.com に設定されています。この設定では、その既定値を別のブランチでオーバーライドできます。","githubPullRequests.postCreate.checkoutDefaultBranch":"リポジトリの既定のブランチをチェックアウトする","githubPullRequests.postCreate.checkoutDefaultBranchAndCopy":"リポジトリの既定のブランチをチェックアウトし、プル要求へのリンクをクリップボードにコピーします","githubPullRequests.postCreate.checkoutDefaultBranchAndShow":"リポジトリの既定のブランチをチェックアウトし、Pull Requests ビューに プル要求を表示する","githubPullRequests.postCreate.description":"pull request の作成後に実行するアクション。","githubPullRequests.postCreate.none":"何もしない","githubPullRequests.postCreate.openOverview":"pull request の概要ページを開く","githubPullRequests.pullBranch.always":"PR で変更が検出された場合は、常に PR ブランチをプルします。「\"git.autoStash\": true」の場合、予期しないファイル変更を防ぐために代わりに 'プロンプト' が出されます。","githubPullRequests.pullBranch.description":"PR ブランチがローカルでチェックアウトされたときに、リモートから変更をプルします。PR が手動で更新されたとき、およびバックグラウンドでの定期的な更新中に、変更が検出されます。","githubPullRequests.pullBranch.never":"PR で変更が検出された場合は、PR ブランチをプルしません。","githubPullRequests.pullBranch.prompt":"PR で変更が検出された場合は、PR ブランチをプルするように求めるプロンプトを出します。","githubPullRequests.pullPullRequestBranchBeforeCheckout.description":"チェックアウト前にpull 要求をプルします","githubPullRequests.pullRequestDescription.commit":"最新のコミット メッセージのみを使用する","githubPullRequests.pullRequestDescription.copilot":"GitHub Copilot から pull request のタイトルと説明を生成します。GitHub Copilot 拡張機能がインストールされ、認証されている必要があります。Copilot が設定されていない場合、'コミット' にフォールバックします。","githubPullRequests.pullRequestDescription.description":"pull request の作成時に使用される説明です。","githubPullRequests.pullRequestDescription.none":"既定の説明がない","githubPullRequests.pullRequestDescription.template":"pull request テンプレートとコミットの説明を使用するか、テンプレートが見つからない場合はコミットの説明のみを使用します","githubPullRequests.pushBranch.always":"PR の作成時にブランチを常にプッシュすると、\"from\" ブランチはリモートで使用できません。","githubPullRequests.pushBranch.description":"PR の作成時に \"from\" ブランチをプッシュすると、\"from\" ブランチはリモートで使用できません。","githubPullRequests.pushBranch.prompt":"PR の作成時にブランチをプッシュするようにプロンプトを出すと、\"from\" ブランチはリモートで使用できません。","githubPullRequests.queries.assignedToMe":"自分に割り当て済み","githubPullRequests.queries.createdByMe":"自分が作成","githubPullRequests.queries.label.description":"Pull Requests ツリーにクエリ用に表示するラベル。","githubPullRequests.queries.markdownDescription":"GitHub Pull Requests ツリーで使用するクエリを指定します。すべてのクエリは、**現在開いているリポジトリ**に対して行われます。各クエリ オブジェクトには、ツリーに表示される 'label' と、[GitHub search syntax](https://help.github.com/en/articles/understanding-the-search-syntax) を使用した検索 'query' があります。変数 '${user}' を使用して、検索内のログイン ユーザーを指定できます。既定では、これらのクエリは「レビュー待ち」、「自分に割り当て」、「自分で作成」のカテゴリを定義します。これらを保持する場合は、設定を変更するときに配列に残っていることを確認します。","githubPullRequests.queries.query.description":"pull request の検索に使用されるクエリです。","githubPullRequests.queries.waitingForMyReview":"自分のレビュー待ち","githubPullRequests.remotes.markdownDescription":"pull request をフェッチするリモートの一覧 (名前別)。","githubPullRequests.setAutoMerge.description":"[Pull Request の作成] ビューの [自動マージ] チェック ボックスをオンにします。","githubPullRequests.showPullRequestNumberInTree.description":"ツリー ビューで pull request 番号を表示します。","githubPullRequests.terminalLinksHandler.ask":"使用するメソッドを確認する","githubPullRequests.terminalLinksHandler.description":"ターミナル リンクの既定のハンドラー。","githubPullRequests.terminalLinksHandler.github":"GitHub で pull request を作成する","githubPullRequests.terminalLinksHandler.vscode":"VS Code で pull request を作成する","githubPullRequests.upstreamRemote.add":"フォークに `upstream` リモートが自動的に追加されます","githubPullRequests.upstreamRemote.description":"フォークに `upstream` リモートを自動的に追加するかどうかを制御します","githubPullRequests.upstreamRemote.never":"フォークに `upstream` リモートが自動的に追加されることはありません","githubPullRequests.useReviewMode.closed":"閉じられた pull request にレビュー モードを使用します。マージされた pull request は \"閉じられた\" とは見なされません。","githubPullRequests.useReviewMode.description":"レビュー モードを使用する pull request 状態を選択します。\"オープン\" pull request は常にレビュー モードを使用します。","githubPullRequests.useReviewMode.merged":"マージされた pull request にはレビュー モードを使用します。","submenu.github.issues.overflow.label":"その他のアクション...","submenu.github.pullRequests.overflow.label":"その他のアクション...","view.github.active.pull.request.name":"アクティブな pull request","view.github.active.pull.request.welcome.name":"アクティブな pull request","view.github.compare.changes.name":"変更されたファイル","view.github.compare.changesCommits.name":"コミット","view.github.create.pull.request.name":"作成","view.github.login.name":"ログイン","view.github.pull.request.name":"GitHub Pull Request","view.issues.github.name":"イシュー","view.pr.github.name":"Pull Requests","view.pr.status.github.name":"pull request の変更","welcome.github.activePullRequest.contents":"読み込み中...","welcome.github.login.contents":"GitHub\n[サインイン](command:pr.signin) でまだサインインしていません","welcome.github.loginNoEnterprise.contents":"GitHub\n[サインイン](command:pr.signinNoEnterprise) でまだサインインしていません","welcome.github.loginWithEnterprise.contents":"[GitHub Enterprise でサインイン](command:pr.signinenterprise)","welcome.github.noGit.contents":"Git がインストールされていないか、それ以外の場合は使用できません。Git をインストールするか、Git のインストールを修正してから、再度読み込みます。","welcome.issues.github.noFolder.contents":"まだフォルダーを開いていません。","welcome.issues.github.noRepo.contents":"Git リポジトリが見つかりません","welcome.issues.github.uninitialized.contents":"読み込み中...","welcome.pr.github.noFolder.contents":"フォルダーをまだ開いていません。\n[フォルダーを開く](command:workbench.action.files.openFolder)","welcome.pr.github.noRepo.contents":"Git リポジトリが見つかりません","welcome.pr.github.parentRepo.contents":"ワークスペースの親フォルダーまたは開いているファイルで、1 つの Git リポジトリが見つかりました。\n[リポジトリを開く](command:git.openRepositoriesInParentFolders)\n[git.openRepositoryInParentFolders](command:workbench.action.openSettings?%5B%22git.openRepositoryInParentFolders%22%5D) 設定を使用して、ワークスペースの親フォルダーまたは開いているファイルのどちらで Git リポジトリを開くかを制御します。詳細については、[ドキュメントをご覧ください](https://aka.ms/vscode-git-repository-in-parent-folders)。","welcome.pr.github.parentRepos.contents":"ワークスペースの親フォルダーまたは開いているファイルで、複数の Git リポジトリが見つかりました。\n[リポジトリを開く](command:git.openRepositoriesInParentFolders)\n[git.openRepositoryInParentFolders](command:workbench.action.openSettings?%5B%22git.openRepositoryInParentFolders%22%5D) 設定を使用して、ワークスペースの親フォルダーまたは開いているファイルのどちらで Git リポジトリを開くかを制御します。詳細については、[ドキュメントをご覧ください](https://aka.ms/vscode-git-repository-in-parent-folders)。","welcome.pr.github.uninitialized.contents":"読み込み中..."}
