{"python.EnableREPLSmartSend.description":"Python REPL의 스마트 보내기를 토글합니다. 스마트 보내기를 사용하면 Shift+Enter로 실행 가능한 가장 작은 코드 블록을 REPL로 보낼 수 있으며 그에 따라 커서를 이동합니다.","python.activeStateToolPath.description":"ActiveState 런타임(버전 0.36 이상)에 대한 상태 도구 실행 파일의 경로입니다.","python.autoComplete.extraPaths.description":"자동 완성 엔진에서 가져와야 하는 라이브러리 등의 경로 목록입니다. 예를 들어 Google App SDK를 사용할 때 경로가 시스템 경로에 없으므로 이 목록에 추가해야 합니다.","python.command.python.analysis.restartLanguageServer.title":"언어 서버 다시 시작","python.command.python.clearCacheAndReload.title":"캐시 지우기 및 창 다시 로드","python.command.python.clearWorkspaceInterpreter.title":"작업 영역 인터프리터 설정 지우기","python.command.python.configureTests.title":"테스트 구성","python.command.python.createEnvironment.title":"환경 만들기…","python.command.python.createNewFile.title":"새 Python 파일","python.command.python.createTerminal.title":"터미널 만들기","python.command.python.debugInTerminal.title":"Python 파일 디버그","python.command.python.enableSourceMapSupport.title":"확장 디버깅에 소스 맵 지원 사용","python.command.python.execInDedicatedTerminal.title":"전용 터미널에서 Python 파일 실행","python.command.python.execInTerminal.title":"터미널에서 Python 파일 실행","python.command.python.execInTerminalIcon.title":"Python 파일 실행","python.command.python.execSelectionInDjangoShell.title":"Django Shell에서 선택/줄 실행","python.command.python.execSelectionInTerminal.title":"Python 터미널에서 선택/줄 실행","python.command.python.installJupyter.title":"Jupyter 확장 설치","python.command.python.launchTensorBoard.title":"Tensorboard 시작","python.command.python.refreshTensorBoard.title":"TensorBoard 새로 고침","python.command.python.reportIssue.title":"문제 보고...","python.command.python.setInterpreter.title":"인터프리터 선택","python.command.python.startREPL.title":"REPL 시작","python.command.python.viewLanguageServerOutput.title":"언어 서버 출력 표시","python.command.python.viewOutput.title":"출력 표시","python.command.testing.rerunFailedTests.title":"실패한 테스트 다시 실행","python.condaPath.description":"활성화에 사용할 conda 실행 파일의 경로입니다(버전 4.4 이상).","python.createEnvironment.contentButton.description":"'requirements.txt' 또는 기타 종속성 파일의 편집기에서 환경 만들기 버튼을 표시하거나 숨깁니다.","python.createEnvironment.trigger.description":"현재 프로젝트에 환경 만들기가 필요한지 검색","python.defaultInterpreterPath.description":"확장이 처음 로드될 때 사용할 기본 Python의 경로이며, 작업 영역에 대한 인터프리터가 선택되면 더 이상 사용되지 않습니다. 언제 사용되는지 알아보려면 [여기](https://aka.ms/AAfekmf)를 참조하세요.","python.diagnostics.sourceMapsEnabled.description":"오류 로그에서 의미 있는 스택 추적에 대한 소스 맵 지원을 활성화합니다.","python.editor.context.submenu.runPython":"Python 실행","python.editor.context.submenu.runPythonInteractive":"대화형 창 실행","python.envFile.description":"환경 변수 정의를 포함하는 파일의 절대 경로입니다.","python.experiments.All.description":"모든 실험의 결합된 목록입니다.","python.experiments.enabled.description":"Python 확장에서 A/B 테스트 실험을 활성화합니다. 활성화하면 제안된 개선 사항 및/또는 기능에 포함될 수 있습니다.","python.experiments.optInto.description":"옵트인할 실험 목록입니다. 목록이 비어 있으면 사용자에게 기본 실험 그룹이 할당됩니다. 자세한 내용은 [여기](https://github.com/microsoft/vscode-python/wiki/AB-Experiments)를 참조하세요.","python.experiments.optOutFrom.description":"옵트아웃할 실험 목록입니다. 목록이 비어 있으면 사용자에게 기본 실험 그룹이 할당됩니다. 자세한 내용은 [여기](https://github.com/microsoft/vscode-python/wiki/AB-Experiments)를 참조하세요.","python.experiments.pythonDiscoveryUsingWorkers.description":"인터프리터를 검색할 때 작업자 스레드를 사용하여 많은 계산을 수행할 수 있도록 합니다.","python.experiments.pythonPromptNewToolsExt.description":"Python 프롬프트 새 도구 확장 실험을 표시합니다.","python.experiments.pythonREPLSmartSend.description":"Python REPL 스마트 보내기 실험을 나타냅니다.","python.experiments.pythonRecommendTensorboardExt.description":"Tensorboard 확장 권장 사항 실험을 나타냅니다.","python.experiments.pythonSurveyNotification.description":"Python 설문 조사 알림 실험을 표시합니다.","python.experiments.pythonTerminalEnvVarActivation.description":"환경 변수를 사용하여 활성화 명령을 보내는 대신 터미널을 활성화하도록 합니다.","python.experiments.pythonTestAdapter.description":"Python 테스트 어댑터 실험을 나타냅니다.","python.globalModuleInstallation.description":"환경을 사용하지 않을 때 전역적으로 Python 모듈을 설치할지 여부입니다.","python.interpreter.infoVisibility.always.description":"항상 정보를 표시합니다.","python.interpreter.infoVisibility.description":"상태 표시줄에 선택한 인터프리터의 정보를 표시하는 경우를 제어합니다.","python.interpreter.infoVisibility.never.description":"정보를 표시하지 않습니다.","python.interpreter.infoVisibility.onPythonRelated.description":"Python 관련 파일이 열려 있는 경우에만 정보를 표시합니다.","python.languageServer.defaultDescription":"자동으로 언어 서버 선택: Pylance가 설치되어 있고 사용 가능한 경우, 그렇지 않으면 Jedi로 대체합니다.","python.languageServer.description":"언어 서버의 유형을 정의합니다.","python.languageServer.jediDescription":"언어 서버로 LSP(Language Server Protocol) 뒤에서 Jedi를 사용합니다.","python.languageServer.noneDescription":"언어 서버 기능을 비활성화합니다.","python.languageServer.pylanceDescription":"Pylance를 언어 서버로 사용하세요.","python.logging.level.deprecation":"이 설정은 더 이상 사용되지 않습니다. 'Developer: Set Log Level...' 명령을 사용하여 로깅 수준을 설정하세요.","python.logging.level.description":"확장 프로그램이 기록하는 로깅 수준, 기본값은 '오류'입니다.","python.menu.createNewFile.title":"Python 파일","python.missingPackage.severity.description":"requirements.txt 또는 pyproject.toml에서 누락된 패키지의 심각도 설정","python.pipenvPath.description":"활성화에 사용할 pipenv 실행 파일의 경로입니다.","python.poetryPath.description":"시 실행 파일의 경로입니다.","python.tensorBoard.logDirectory.deprecationMessage":"Tensorboard 지원이 확장 Tensorboard 확장으로 이동되었습니다. 대신 'tensorBoard.logDirectory' 설정을 사용합니다.","python.tensorBoard.logDirectory.description":"TensorBoard를 시작할 때 로그 디렉터리 프롬프트를 건너뛰려면 이 설정을 선호하는 TensorBoard 로그 디렉터리로 설정하세요.","python.tensorBoard.logDirectory.markdownDeprecationMessage":"Tensorboard 지원이 확장 [Tensorboard 확장](https://marketplace.visualstudio.com/items?itemName=ms-toolsai.tensorboard)으로 이동되었습니다. 대신 'tensorBoard.logDirectory' 설정을 사용합니다.","python.terminal.activateEnvInCurrentTerminal.description":"확장을 로드할 때 현재 터미널에서 Python 환경을 활성화합니다.","python.terminal.activateEnvironment.description":"만든 모든 터미널에서 Python 환경을 활성화합니다.","python.terminal.executeInFileDir.description":"터미널에서 파일을 실행할 때 현재 열려 있는 폴더 대신 파일의 디렉터리에서 실행을 사용할지 여부입니다.","python.terminal.focusAfterLaunch.description":"Python 터미널을 시작할 때 터미널에 커서를 집중할지 여부를 지정합니다.","python.terminal.launchArgs.description":"터미널에서 파일을 실행할 때 사용할 Python 시작 인수입니다.","python.testing.autoTestDiscoverOnSaveEnabled.description":"테스트 파일을 저장할 때 자동 실행 테스트 검색을 활성화합니다.","python.testing.cwd.description":"테스트를 위한 선택적 작업 디렉터리입니다.","python.testing.debugPort.description":"테스트 디버깅에 사용되는 포트 번호입니다.","python.testing.promptToConfigure.description":"잠재적인 테스트 디렉터리가 발견되면 테스트 프레임워크를 구성하라는 메시지를 표시합니다.","python.testing.pytestArgs.description":"전달된 인수입니다. 각 인수는 배열의 개별 항목입니다.","python.testing.pytestEnabled.description":"pytest를 사용하여 테스트를 활성화합니다.","python.testing.pytestPath.description":"Path to pytest(pytest), 전체 경로를 포함하도록 이 설정을 수정하여 사용자 지정 버전의 pytest를 사용할 수 있습니다.","python.testing.unittestArgs.description":"전달된 인수입니다. 각 인수는 배열의 개별 항목입니다.","python.testing.unittestEnabled.description":"unittest를 사용하여 테스트를 활성화합니다.","python.venvFolders.description":"가상 환경을 조사할 홈 디렉터리의 폴더(기본적으로 pyenv, direnv 및 virtualenvwrapper 지원).","python.venvPath.description":"가상 환경 목록이 있는 폴더 경로(예: ~/.pyenv, ~/Envs, ~/.virtualenvs).","walkthrough.pythonDataScienceWelcome.description":"Python을 사용하여 데이터 과학 프로젝트를 시작하는 첫 번째 단계!","walkthrough.pythonDataScienceWelcome.title":"데이터 과학용 Python 시작","walkthrough.pythonWelcome.description":"Python 확장에서 제공하는 모든 강력한 도구와 기능을 사용하여 Python 프로젝트를 설정하는 첫 번째 단계입니다.","walkthrough.pythonWelcome.title":"Python 개발 시작","walkthrough.step.python.createEnvironment.altText":"명령 팔레트에서 Python 환경 만들기","walkthrough.step.python.createEnvironment.description":"Python 프로젝트를 위한 환경을 만듭니다.\r\n[환경 만들기](command:python.createEnvironment)\r\n**팁**: [명령 팔레트](command:workbench.action.showCommands)에서 ``Python: 환경 만들기`` 명령을 실행합니다.\r\n 🔍 자세한 내용은 [문서](https://aka.ms/pythonenvs)를 확인하세요.","walkthrough.step.python.createEnvironment.description2":"Python 프로젝트를 위한 환경을 생성하거나 [Python 인터프리터 선택](command:python.setInterpreter)을 사용하여 기존 프로젝트를 선택합니다.\r\n[환경 만들기](command:python.createEnvironment)\r\n**팁**: [Command Palette]에서 ``Python: Create Environment`` 명령을 실행합니다.](command:workbench.action.showCommands).","walkthrough.step.python.createEnvironment.title":"Python 환경 만들기 ","walkthrough.step.python.createEnvironment.title2":"Python 환경 만들기 또는 선택 ","walkthrough.step.python.createNewNotebook.altText":"새 Jupyter Notebook 만들기","walkthrough.step.python.createNewNotebook.description":"파일 탐색기를 마우스 오른쪽 버튼으로 클릭하고 확장자가 .ipynb인 새 파일을 만듭니다. 또는 [명령 팔레트](command:workbench.action.showCommands)를 열고 다음 명령을 실행합니다.\r\n``Jupyter: 새 빈 전자 필기장 만들기``.\r\n[새 Jupyter Notebook 만들기](command:toSide:jupyter.createnewnotebook)\r\n 기존 프로젝트가 있는 경우 [폴더 열기](command:workbench.action.files.openFolder) 및/또는 GitHub에서 프로젝트를 복제할 수도 있습니다: [Git 리포지토리 복제](command:git.clone).","walkthrough.step.python.createNewNotebook.title":"Jupyter Notebook 만들기 또는 열기","walkthrough.step.python.createPythonFile.altText":"Python 프로젝트를 사용하여 Python 파일 또는 폴더를 엽니다.","walkthrough.step.python.createPythonFile.description":"[열기](command:toSide:workbench.action.files.openFile) 또는 [만들기](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D) Python 파일 - \".py\"로 저장해야 합니다.\r\n[Python 파일 만들기](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D)","walkthrough.step.python.createPythonFile.title":"Python 파일 만들기","walkthrough.step.python.createPythonFolder.description":"[열기](command:workbench.action.files.openFolder) 또는 프로젝트 폴더를 만듭니다.\r\n[프로젝트 폴더 열기](command:workbench.action.files.openFolder)","walkthrough.step.python.createPythonFolder.title":"Python 프로젝트 폴더 열기","walkthrough.step.python.dataScienceLearnMore.altText":"설명서 페이지 및 메일 그룹 리소스를 나타내는 이미지입니다.","walkthrough.step.python.dataScienceLearnMore.description":"📒 [명령 팔레트](command:workbench.action.showCommands)에서 \"Jupyter\"를 찾아 [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") 기능을 살펴보세요. .\r\n  🏃🏻 [자습서](https://aka.ms/AAdjzpd)에서 더 많은 기능을 알아보세요.\r\n[자세히 알아보기](https://aka.ms/AAdar6q)","walkthrough.step.python.dataScienceLearnMore.title":"더 알아보기","walkthrough.step.python.installJupyterExt.altText":"새 Jupyter Notebook 만들기","walkthrough.step.python.installJupyterExt.description":"아직 설치하지 않은 경우 [Jupyter 확장](command:workbench.extensions.search?\"ms-toolsai.jupyter\")을 설치하여 VS Code에서 전자 필기장 환경을 최대한 활용하세요!\r\n \r\n[Jupyter 검색](command:workbench.extensions.search?\"ms-toolsai.jupyter\")","walkthrough.step.python.installJupyterExt.title":"Jupyter 확장 설치","walkthrough.step.python.installPythonLinux.description":"Python 확장을 사용하려면 Python을 설치해야 합니다. 터미널을 통해 Python 3을 설치합니다.\r\n [터미널을 통해 Python 설치](command:python.installPythonOnLinux)\r\n","walkthrough.step.python.installPythonLinux.title":"Python 설치","walkthrough.step.python.installPythonMac.description":"Python 확장을 사용하려면 Python을 설치해야 합니다. 터미널을 통해 Python 3을 설치합니다.\r\n [Brew를 통해 Python 설치](command:python.installPythonOnMac)\r\n","walkthrough.step.python.installPythonMac.title":"Python 설치","walkthrough.step.python.installPythonWin8.description":"Python 확장을 사용하려면 Python이 설치되어 있어야 합니다. [python.org에서](https://www.python.org/downloads) Python을 설치합니다.\r\n\r\n[Python 설치](https://www.python.org/downloads)\r\n","walkthrough.step.python.installPythonWin8.title":"Python 설치","walkthrough.step.python.learnMoreWithDS.altText":"설명서 페이지 및 메일 그룹 리소스를 나타내는 이미지입니다.","walkthrough.step.python.learnMoreWithDS.description":"🎨 [명령 팔레트](command:workbench.action.showCommands)에서 \"Python\"을 찾아 Python 확장이 제공하는 모든 기능을 탐색합니다.\r\n 📈 Python에서 [데이터 과학](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D)을 시작하는 방법에 대해 자세히 알아보세요.\r\n ✨ 최신 기능에 대해 자세히 알아보려면 [릴리스 정보](https://aka.ms/AA8dxtb)를 살펴보세요.\r\n \r\n[자세히 알아보기](https://aka.ms/AA8dqti)","walkthrough.step.python.learnMoreWithDS.description2":"🎨 [명령 팔레트](command:workbench.action.showCommands)에서 \"Python\"을 찾아 Python 확장이 제공하는 모든 기능을 탐색합니다.\r\n 📈 Python에서 [데이터 과학](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D)을 시작하는 방법에 대해 자세히 알아보세요.\r\n ✨ 최신 기능에 대해 자세히 알아보려면 [릴리스 정보](https://aka.ms/AA8dxtb)를 살펴보세요.\r\n \r\n[Python 자습서 따라하기](https://aka.ms/AA8dqti)","walkthrough.step.python.learnMoreWithDS.title":"더 많은 리소스 살펴보기:","walkthrough.step.python.openInteractiveWindow.altText":"Python 대화형 창 열기","walkthrough.step.python.openInteractiveWindow.description":"Python 대화형 창은 Python 코드의 결과를 실행하고 볼 수 있는 Python 셸입니다. ``#%%``를 입력하여 Python 파일에 셀을 만들 수 있습니다.\r\n \r\n언제든지 대화형 창을 열려면 [Command Palette](command:workbench.action.showCommands)를 열고 다음 명령을 실행하세요.\r\n``Jupyter: 대화형 창 만들기``.\r\n[대화형 창 열기](command:jupyter.createnewinteractive)","walkthrough.step.python.openInteractiveWindow.title":"Python 대화형 창 열기","walkthrough.step.python.runAndDebug.altText":"F5 또는 오른쪽 위에 있는 재생 단추를 사용하여 VS Code 실행 및 디버그하는 방법입니다.","walkthrough.step.python.runAndDebug.description":"Python 파일을 열고 편집기의 오른쪽 상단에 있는 재생 버튼을 클릭하거나 파일에서 F5를 누르고 \"Python File\"을 선택하여 디버거와 함께 실행합니다.\r\n  \r\n[자세히 알아보기](https://code.visualstudio.com/docs/python/python-tutorial#_run-hello-world)","walkthrough.step.python.runAndDebug.title":"Python 파일 실행 및 디버그","walkthrough.step.python.selectInterpreter.altText":"상태 표시줄에서 Python 인터프리터 선택","walkthrough.step.python.selectInterpreter.description":"Python 프로젝트에 사용할 Python 인터프리터/환경을 선택합니다.\r\n[Python 인터프리터 선택](command:python.setInterpreter)\r\n**팁**: [명령 팔레트](command:workbench.action.showCommands)에서 ``Python: 인터프리터 선택`` 명령을 실행합니다.","walkthrough.step.python.selectInterpreter.title":"Python 인터프리터 선택"}
