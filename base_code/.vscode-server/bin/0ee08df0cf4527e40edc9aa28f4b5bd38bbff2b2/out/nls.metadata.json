{
	"keys": {
		"vs/platform/terminal/node/ptyHostMain": [
			"ptyHost"
		],
		"vs/server/node/remoteExtensionHostAgentCli": [
			"remotecli"
		],
		"vs/platform/environment/node/argv": [
			"optionsUpperCase",
			"extensionsManagement",
			"troubleshooting",
			"cliDataDir",
			"cliDataDir",
			"diff",
			"merge",
			"add",
			"goto",
			"newWindow",
			"reuseWindow",
			"wait",
			"locale",
			"userDataDir",
			"profileName",
			"help",
			"extensionHomePath",
			"listExtensions",
			"showVersions",
			"category",
			"installExtension",
			"install prerelease",
			"uninstallExtension",
			"experimentalApis",
			"version",
			"verbose",
			"log",
			"status",
			"prof-startup",
			"disableExtensions",
			"disableExtension",
			"turn sync",
			"inspect-extensions",
			"inspect-brk-extensions",
			"disableGPU",
			"disableChromiumSandbox",
			"telemetry",
			"deprecated.useInstead",
			"paths",
			"usage",
			"options",
			"stdinWindows",
			"stdinUnix",
			"subcommands",
			"unknownVersion",
			"unknownCommit"
		],
		"vs/server/node/serverEnvironmentService": [
			"host",
			"port",
			"socket-path",
			"connection-token",
			"connection-token-file",
			"without-connection-token",
			"acceptLicenseTerms",
			"serverDataDir",
			"telemetry-level",
			"default-folder",
			"default-workspace",
			"start-server"
		],
		"vs/editor/common/config/editorOptions": [
			"accessibilitySupport.auto",
			"accessibilitySupport.on",
			"accessibilitySupport.off",
			"accessibilitySupport",
			"comments.insertSpace",
			"comments.ignoreEmptyLines",
			"emptySelectionClipboard",
			"find.cursorMoveOnType",
			"editor.find.seedSearchStringFromSelection.never",
			"editor.find.seedSearchStringFromSelection.always",
			"editor.find.seedSearchStringFromSelection.selection",
			"find.seedSearchStringFromSelection",
			"editor.find.autoFindInSelection.never",
			"editor.find.autoFindInSelection.always",
			"editor.find.autoFindInSelection.multiline",
			"find.autoFindInSelection",
			"find.globalFindClipboard",
			"find.addExtraSpaceOnTop",
			"find.loop",
			"fontLigatures",
			"fontFeatureSettings",
			"fontLigaturesGeneral",
			"fontVariations",
			"fontVariationSettings",
			"fontVariationsGeneral",
			"fontSize",
			"fontWeightErrorMessage",
			"fontWeight",
			"editor.gotoLocation.multiple.peek",
			"editor.gotoLocation.multiple.gotoAndPeek",
			"editor.gotoLocation.multiple.goto",
			"editor.gotoLocation.multiple.deprecated",
			"editor.editor.gotoLocation.multipleDefinitions",
			"editor.editor.gotoLocation.multipleTypeDefinitions",
			"editor.editor.gotoLocation.multipleDeclarations",
			"editor.editor.gotoLocation.multipleImplemenattions",
			"editor.editor.gotoLocation.multipleReferences",
			"alternativeDefinitionCommand",
			"alternativeTypeDefinitionCommand",
			"alternativeDeclarationCommand",
			"alternativeImplementationCommand",
			"alternativeReferenceCommand",
			"hover.enabled",
			"hover.delay",
			"hover.sticky",
			"hover.hidingDelay",
			"hover.above",
			"wrappingStrategy.simple",
			"wrappingStrategy.advanced",
			"wrappingStrategy",
			"codeActions",
			"editor.lightbulb.showAiIcon.off",
			"editor.lightbulb.showAiIcon.onCode",
			"editor.lightbulb.showAiIcon.on",
			"showAiIcons",
			"editor.stickyScroll.enabled",
			"editor.stickyScroll.maxLineCount",
			"editor.stickyScroll.defaultModel",
			"editor.stickyScroll.scrollWithEditor",
			"inlayHints.enable",
			"editor.inlayHints.on",
			"editor.inlayHints.onUnlessPressed",
			"editor.inlayHints.offUnlessPressed",
			"editor.inlayHints.off",
			"inlayHints.fontSize",
			"inlayHints.fontFamily",
			"inlayHints.padding",
			"lineHeight",
			"minimap.enabled",
			"minimap.autohide",
			"minimap.size.proportional",
			"minimap.size.fill",
			"minimap.size.fit",
			"minimap.size",
			"minimap.side",
			"minimap.showSlider",
			"minimap.scale",
			"minimap.renderCharacters",
			"minimap.maxColumn",
			"padding.top",
			"padding.bottom",
			"parameterHints.enabled",
			"parameterHints.cycle",
			"on",
			"inline",
			"off",
			"quickSuggestions.strings",
			"quickSuggestions.comments",
			"quickSuggestions.other",
			"quickSuggestions",
			"lineNumbers.off",
			"lineNumbers.on",
			"lineNumbers.relative",
			"lineNumbers.interval",
			"lineNumbers",
			"rulers.size",
			"rulers.color",
			"rulers",
			"scrollbar.vertical.auto",
			"scrollbar.vertical.visible",
			"scrollbar.vertical.fit",
			"scrollbar.vertical",
			"scrollbar.horizontal.auto",
			"scrollbar.horizontal.visible",
			"scrollbar.horizontal.fit",
			"scrollbar.horizontal",
			"scrollbar.verticalScrollbarSize",
			"scrollbar.horizontalScrollbarSize",
			"scrollbar.scrollByPage",
			"scrollbar.ignoreHorizontalScrollbarInContentHeight",
			"unicodeHighlight.nonBasicASCII",
			"unicodeHighlight.invisibleCharacters",
			"unicodeHighlight.ambiguousCharacters",
			"unicodeHighlight.includeComments",
			"unicodeHighlight.includeStrings",
			"unicodeHighlight.allowedCharacters",
			"unicodeHighlight.allowedLocales",
			"inlineSuggest.enabled",
			"inlineSuggest.showToolbar.always",
			"inlineSuggest.showToolbar.onHover",
			"inlineSuggest.showToolbar.never",
			"inlineSuggest.showToolbar",
			"inlineSuggest.suppressSuggestions",
			"bracketPairColorization.enabled",
			"bracketPairColorization.independentColorPoolPerBracketType",
			"editor.guides.bracketPairs.true",
			"editor.guides.bracketPairs.active",
			"editor.guides.bracketPairs.false",
			"editor.guides.bracketPairs",
			"editor.guides.bracketPairsHorizontal.true",
			"editor.guides.bracketPairsHorizontal.active",
			"editor.guides.bracketPairsHorizontal.false",
			"editor.guides.bracketPairsHorizontal",
			"editor.guides.highlightActiveBracketPair",
			"editor.guides.indentation",
			"editor.guides.highlightActiveIndentation.true",
			"editor.guides.highlightActiveIndentation.always",
			"editor.guides.highlightActiveIndentation.false",
			"editor.guides.highlightActiveIndentation",
			"suggest.insertMode.insert",
			"suggest.insertMode.replace",
			"suggest.insertMode",
			"suggest.filterGraceful",
			"suggest.localityBonus",
			"suggest.shareSuggestSelections",
			"suggest.insertMode.always",
			"suggest.insertMode.never",
			"suggest.insertMode.whenTriggerCharacter",
			"suggest.insertMode.whenQuickSuggestion",
			"suggest.selectionMode",
			"suggest.snippetsPreventQuickSuggestions",
			"suggest.showIcons",
			"suggest.showStatusBar",
			"suggest.preview",
			"suggest.showInlineDetails",
			"suggest.maxVisibleSuggestions.dep",
			"deprecated",
			"editor.suggest.showMethods",
			"editor.suggest.showFunctions",
			"editor.suggest.showConstructors",
			"editor.suggest.showDeprecated",
			"editor.suggest.matchOnWordStartOnly",
			"editor.suggest.showFields",
			"editor.suggest.showVariables",
			"editor.suggest.showClasss",
			"editor.suggest.showStructs",
			"editor.suggest.showInterfaces",
			"editor.suggest.showModules",
			"editor.suggest.showPropertys",
			"editor.suggest.showEvents",
			"editor.suggest.showOperators",
			"editor.suggest.showUnits",
			"editor.suggest.showValues",
			"editor.suggest.showConstants",
			"editor.suggest.showEnums",
			"editor.suggest.showEnumMembers",
			"editor.suggest.showKeywords",
			"editor.suggest.showTexts",
			"editor.suggest.showColors",
			"editor.suggest.showFiles",
			"editor.suggest.showReferences",
			"editor.suggest.showCustomcolors",
			"editor.suggest.showFolders",
			"editor.suggest.showTypeParameters",
			"editor.suggest.showSnippets",
			"editor.suggest.showUsers",
			"editor.suggest.showIssues",
			"selectLeadingAndTrailingWhitespace",
			"selectSubwords",
			"wrappingIndent.none",
			"wrappingIndent.same",
			"wrappingIndent.indent",
			"wrappingIndent.deepIndent",
			"wrappingIndent",
			"dropIntoEditor.enabled",
			"dropIntoEditor.showDropSelector",
			"dropIntoEditor.showDropSelector.afterDrop",
			"dropIntoEditor.showDropSelector.never",
			"pasteAs.enabled",
			"pasteAs.showPasteSelector",
			"pasteAs.showPasteSelector.afterPaste",
			"pasteAs.showPasteSelector.never",
			"acceptSuggestionOnCommitCharacter",
			"acceptSuggestionOnEnterSmart",
			"acceptSuggestionOnEnter",
			"accessibilityPageSize",
			"editorViewAccessibleLabel",
			"screenReaderAnnounceInlineSuggestion",
			"editor.autoClosingBrackets.languageDefined",
			"editor.autoClosingBrackets.beforeWhitespace",
			"autoClosingBrackets",
			"editor.autoClosingComments.languageDefined",
			"editor.autoClosingComments.beforeWhitespace",
			"autoClosingComments",
			"editor.autoClosingDelete.auto",
			"autoClosingDelete",
			"editor.autoClosingOvertype.auto",
			"autoClosingOvertype",
			"editor.autoClosingQuotes.languageDefined",
			"editor.autoClosingQuotes.beforeWhitespace",
			"autoClosingQuotes",
			"editor.autoIndent.none",
			"editor.autoIndent.keep",
			"editor.autoIndent.brackets",
			"editor.autoIndent.advanced",
			"editor.autoIndent.full",
			"autoIndent",
			"editor.autoSurround.languageDefined",
			"editor.autoSurround.quotes",
			"editor.autoSurround.brackets",
			"autoSurround",
			"stickyTabStops",
			"codeLens",
			"codeLensFontFamily",
			"codeLensFontSize",
			"colorDecorators",
			"editor.colorDecoratorActivatedOn.clickAndHover",
			"editor.colorDecoratorActivatedOn.hover",
			"editor.colorDecoratorActivatedOn.click",
			"colorDecoratorActivatedOn",
			"colorDecoratorsLimit",
			"columnSelection",
			"copyWithSyntaxHighlighting",
			"cursorBlinking",
			"cursorSmoothCaretAnimation.off",
			"cursorSmoothCaretAnimation.explicit",
			"cursorSmoothCaretAnimation.on",
			"cursorSmoothCaretAnimation",
			"cursorStyle",
			"cursorSurroundingLines",
			"cursorSurroundingLinesStyle.default",
			"cursorSurroundingLinesStyle.all",
			"cursorSurroundingLinesStyle",
			"cursorWidth",
			"dragAndDrop",
			"experimentalWhitespaceRendering.svg",
			"experimentalWhitespaceRendering.font",
			"experimentalWhitespaceRendering.off",
			"experimentalWhitespaceRendering",
			"fastScrollSensitivity",
			"folding",
			"foldingStrategy.auto",
			"foldingStrategy.indentation",
			"foldingStrategy",
			"foldingHighlight",
			"foldingImportsByDefault",
			"foldingMaximumRegions",
			"unfoldOnClickAfterEndOfLine",
			"fontFamily",
			"formatOnPaste",
			"formatOnType",
			"glyphMargin",
			"hideCursorInOverviewRuler",
			"letterSpacing",
			"linkedEditing",
			"links",
			"matchBrackets",
			"mouseWheelScrollSensitivity",
			"mouseWheelZoom",
			"multiCursorMergeOverlapping",
			"multiCursorModifier.ctrlCmd",
			"multiCursorModifier.alt",
			{
				"key": "multiCursorModifier",
				"comment": [
					"- `ctrlCmd` refers to a value the setting can take and should not be localized.",
					"- `Control` and `Command` refer to the modifier keys Ctrl or Cmd on the keyboard and can be localized."
				]
			},
			"multiCursorPaste.spread",
			"multiCursorPaste.full",
			"multiCursorPaste",
			"multiCursorLimit",
			"occurrencesHighlight.off",
			"occurrencesHighlight.singleFile",
			"occurrencesHighlight.multiFile",
			"occurrencesHighlight",
			"overviewRulerBorder",
			"peekWidgetDefaultFocus.tree",
			"peekWidgetDefaultFocus.editor",
			"peekWidgetDefaultFocus",
			"definitionLinkOpensInPeek",
			"quickSuggestionsDelay",
			"renameOnType",
			"renameOnTypeDeprecate",
			"renderControlCharacters",
			"renderFinalNewline",
			"renderLineHighlight.all",
			"renderLineHighlight",
			"renderLineHighlightOnlyWhenFocus",
			"renderWhitespace.boundary",
			"renderWhitespace.selection",
			"renderWhitespace.trailing",
			"renderWhitespace",
			"roundedSelection",
			"scrollBeyondLastColumn",
			"scrollBeyondLastLine",
			"scrollPredominantAxis",
			"selectionClipboard",
			"selectionHighlight",
			"showFoldingControls.always",
			"showFoldingControls.never",
			"showFoldingControls.mouseover",
			"showFoldingControls",
			"showUnused",
			"showDeprecated",
			"snippetSuggestions.top",
			"snippetSuggestions.bottom",
			"snippetSuggestions.inline",
			"snippetSuggestions.none",
			"snippetSuggestions",
			"smoothScrolling",
			"inlineCompletionsAccessibilityVerbose",
			"suggestFontSize",
			"suggestLineHeight",
			"suggestOnTriggerCharacters",
			"suggestSelection.first",
			"suggestSelection.recentlyUsed",
			"suggestSelection.recentlyUsedByPrefix",
			"suggestSelection",
			"tabCompletion.on",
			"tabCompletion.off",
			"tabCompletion.onlySnippets",
			"tabCompletion",
			"unusualLineTerminators.auto",
			"unusualLineTerminators.off",
			"unusualLineTerminators.prompt",
			"unusualLineTerminators",
			"useTabStops",
			"wordBreak.normal",
			"wordBreak.keepAll",
			"wordBreak",
			"wordSeparators",
			"wordWrap.off",
			"wordWrap.on",
			{
				"key": "wordWrap.wordWrapColumn",
				"comment": [
					"- `editor.wordWrapColumn` refers to a different setting and should not be localized."
				]
			},
			{
				"key": "wordWrap.bounded",
				"comment": [
					"- viewport means the edge of the visible window size.",
					"- `editor.wordWrapColumn` refers to a different setting and should not be localized."
				]
			},
			{
				"key": "wordWrap",
				"comment": [
					"- 'off', 'on', 'wordWrapColumn' and 'bounded' refer to values the setting can take and should not be localized.",
					"- `editor.wordWrapColumn` refers to a different setting and should not be localized."
				]
			},
			{
				"key": "wordWrapColumn",
				"comment": [
					"- `editor.wordWrap` refers to a different setting and should not be localized.",
					"- 'wordWrapColumn' and 'bounded' refer to values the different setting can take and should not be localized."
				]
			},
			"defaultColorDecorators",
			"tabFocusMode"
		],
		"vs/platform/terminal/node/ptyService": [
			"terminal-history-restored"
		],
		"vs/platform/request/common/request": [
			"request",
			"httpConfigurationTitle",
			"proxy",
			"strictSSL",
			"proxyKerberosServicePrincipal",
			"proxyAuthorization",
			"proxySupportOff",
			"proxySupportOn",
			"proxySupportFallback",
			"proxySupportOverride",
			"proxySupport",
			"systemCertificates",
			"systemCertificatesV2"
		],
		"vs/platform/extensionManagement/common/extensionManagement": [
			"extensions",
			"preferences"
		],
		"vs/platform/extensionManagement/node/extensionManagementService": [
			"incompatible",
			"MarketPlaceDisabled",
			"Not a Marketplace extension",
			"removeError",
			"errorDeleting",
			"renameError",
			"cannot read",
			"restartCode",
			"restartCode"
		],
		"vs/platform/files/node/diskFileSystemProvider": [
			"fileExists",
			"fileNotExists",
			"moveError",
			"copyError",
			"fileCopyErrorPathCase",
			"fileMoveCopyErrorNotFound",
			"fileMoveCopyErrorExists"
		],
		"vs/platform/files/common/fileService": [
			"invalidPath",
			"noProviderFound",
			"fileNotFoundError",
			"fileExists",
			"err.write",
			"writeFailedUnlockUnsupported",
			"writeFailedAtomicUnsupported1",
			"writeFailedAtomicUnsupported2",
			"writeFailedAtomicUnlock",
			"fileIsDirectoryWriteError",
			"fileModifiedError",
			"err.read",
			"fileIsDirectoryReadError",
			"fileNotModifiedError",
			"fileTooLargeError",
			"unableToMoveCopyError1",
			"unableToMoveCopyError2",
			"unableToMoveCopyError3",
			"unableToMoveCopyError4",
			"mkdirExistsError",
			"deleteFailedTrashUnsupported",
			"deleteFailedAtomicUnsupported",
			"deleteFailedTrashAndAtomicUnsupported",
			"deleteFailedNotFound",
			"deleteFailedNonEmptyFolder",
			"err.readonly",
			"err.readonly"
		],
		"vs/platform/files/common/files": [
			"unknownError",
			"sizeB",
			"sizeKB",
			"sizeMB",
			"sizeGB",
			"sizeTB"
		],
		"vs/platform/languagePacks/common/languagePacks": [
			"currentDisplayLanguage"
		],
		"vs/platform/extensionManagement/common/extensionManagementCLI": [
			"notFound",
			"useId",
			"listFromLocation",
			"installingExtensionsOnLocation",
			"installingExtensions",
			"alreadyInstalled-checkAndUpdate",
			"alreadyInstalled",
			"error while installing extensions",
			"installation failed",
			"successVsixInstall",
			"cancelVsixInstall",
			"alreadyInstalled",
			"updateMessage",
			"installing builtin with version",
			"installing builtin ",
			"installing with version",
			"installing",
			"successInstall",
			"cancelInstall",
			"forceDowngrade",
			"builtin",
			"forceUninstall",
			"uninstalling",
			"successUninstallFromLocation",
			"successUninstall",
			"notInstalleddOnLocation",
			"notInstalled"
		],
		"vs/base/common/platform": [
			{
				"key": "ensureLoaderPluginIsLoaded",
				"comment": [
					"{Locked}"
				]
			}
		],
		"vs/platform/extensionManagement/common/extensionsScannerService": [
			"fileReadFail",
			"jsonParseFail",
			"jsonParseInvalidType",
			"jsonsParseReportErrors",
			"jsonInvalidFormat",
			"jsonsParseReportErrors",
			"jsonInvalidFormat"
		],
		"vs/platform/userDataProfile/common/userDataProfile": [
			"defaultProfile"
		],
		"vs/server/node/serverServices": [
			"remoteExtensionLog"
		],
		"vs/workbench/api/common/extHostTelemetry": [
			"extensionTelemetryLog"
		],
		"vs/workbench/api/common/extHostExtensionService": [
			"extensionTestError1",
			"extensionTestError"
		],
		"vs/workbench/api/common/extHostWorkspace": [
			"updateerror"
		],
		"vs/workbench/api/common/extHostTerminalService": [
			"launchFail.idMissingOnExtHost"
		],
		"vs/workbench/api/common/extHostTunnelService": [
			"tunnelPrivacy.private",
			"tunnelPrivacy.public"
		],
		"vs/workbench/api/node/extHostDebugService": [
			"debug.terminal.title"
		],
		"vs/workbench/api/common/extHostLogService": [
			"remote",
			"worker",
			"local"
		],
		"vs/base/common/errorMessage": [
			"stackTrace.format",
			"nodeExceptionMessage",
			"error.defaultMessage",
			"error.defaultMessage",
			"error.moreErrors",
			"error.defaultMessage"
		],
		"vs/platform/contextkey/common/contextkey": [
			"contextkey.parser.error.emptyString",
			"contextkey.parser.error.emptyString.hint",
			"contextkey.parser.error.noInAfterNot",
			"contextkey.parser.error.closingParenthesis",
			"contextkey.parser.error.unexpectedToken",
			"contextkey.parser.error.unexpectedToken.hint",
			"contextkey.parser.error.unexpectedEOF",
			"contextkey.parser.error.unexpectedEOF.hint",
			"contextkey.parser.error.expectedButGot",
			"contextkey.scanner.errorForLinterWithHint",
			"contextkey.scanner.errorForLinter"
		],
		"vs/platform/terminal/node/terminalProcess": [
			"launchFail.cwdNotDirectory",
			"launchFail.cwdDoesNotExist",
			"launchFail.executableDoesNotExist",
			"launchFail.executableIsNotFileOrSymlink"
		],
		"vs/platform/configuration/common/configurationRegistry": [
			"defaultLanguageConfigurationOverrides.title",
			"defaultLanguageConfiguration.description",
			"overrideSettings.defaultDescription",
			"overrideSettings.errorMessage",
			"overrideSettings.defaultDescription",
			"overrideSettings.errorMessage",
			"config.property.empty",
			"config.property.languageDefault",
			"config.property.duplicate",
			"config.policy.duplicate"
		],
		"vs/platform/shell/node/shellEnv": [
			"resolveShellEnvTimeout",
			"resolveShellEnvError",
			"resolveShellEnvExitError"
		],
		"vs/platform/extensions/common/extensionValidator": [
			"extensionDescription.publisher",
			"extensionDescription.name",
			"extensionDescription.version",
			"extensionDescription.engines",
			"extensionDescription.engines.vscode",
			"extensionDescription.extensionDependencies",
			"extensionDescription.activationEvents1",
			"extensionDescription.activationEvents2",
			"extensionDescription.extensionKind",
			"extensionDescription.main1",
			"extensionDescription.main2",
			"extensionDescription.browser1",
			"extensionDescription.browser2",
			"notSemver",
			"versionSyntax",
			"versionSpecificity1",
			"versionSpecificity2",
			"versionMismatch"
		],
		"vs/base/node/zip": [
			"invalid file",
			"incompleteExtract",
			"notFound"
		],
		"vs/platform/extensionManagement/common/abstractExtensionManagementService": [
			"MarketPlaceDisabled",
			"malicious extension",
			"notFoundDeprecatedReplacementExtension",
			"incompatible platform",
			"notFoundReleaseExtension",
			"notFoundCompatibleDependency",
			"singleDependentError",
			"twoDependentsError",
			"multipleDependentsError",
			"singleIndirectDependentError",
			"twoIndirectDependentsError",
			"multipleIndirectDependentsError"
		],
		"vs/platform/extensionManagement/node/extensionManagementUtil": [
			"invalidManifest"
		],
		"vs/platform/files/common/io": [
			"fileTooLargeError"
		],
		"vs/base/common/jsonErrorMessages": [
			"error.invalidSymbol",
			"error.invalidNumberFormat",
			"error.propertyNameExpected",
			"error.valueExpected",
			"error.colonExpected",
			"error.commaExpected",
			"error.closeBraceExpected",
			"error.closeBracketExpected",
			"error.endOfFileExpected"
		],
		"vs/platform/extensionManagement/common/extensionNls": [
			"missingNLSKey"
		],
		"vs/platform/workspace/common/workspace": [
			"codeWorkspace"
		],
		"vs/base/common/date": [
			"date.fromNow.in",
			"date.fromNow.now",
			"date.fromNow.seconds.singular.ago.fullWord",
			"date.fromNow.seconds.singular.ago",
			"date.fromNow.seconds.plural.ago.fullWord",
			"date.fromNow.seconds.plural.ago",
			"date.fromNow.seconds.singular.fullWord",
			"date.fromNow.seconds.singular",
			"date.fromNow.seconds.plural.fullWord",
			"date.fromNow.seconds.plural",
			"date.fromNow.minutes.singular.ago.fullWord",
			"date.fromNow.minutes.singular.ago",
			"date.fromNow.minutes.plural.ago.fullWord",
			"date.fromNow.minutes.plural.ago",
			"date.fromNow.minutes.singular.fullWord",
			"date.fromNow.minutes.singular",
			"date.fromNow.minutes.plural.fullWord",
			"date.fromNow.minutes.plural",
			"date.fromNow.hours.singular.ago.fullWord",
			"date.fromNow.hours.singular.ago",
			"date.fromNow.hours.plural.ago.fullWord",
			"date.fromNow.hours.plural.ago",
			"date.fromNow.hours.singular.fullWord",
			"date.fromNow.hours.singular",
			"date.fromNow.hours.plural.fullWord",
			"date.fromNow.hours.plural",
			"date.fromNow.days.singular.ago",
			"date.fromNow.days.plural.ago",
			"date.fromNow.days.singular",
			"date.fromNow.days.plural",
			"date.fromNow.weeks.singular.ago.fullWord",
			"date.fromNow.weeks.singular.ago",
			"date.fromNow.weeks.plural.ago.fullWord",
			"date.fromNow.weeks.plural.ago",
			"date.fromNow.weeks.singular.fullWord",
			"date.fromNow.weeks.singular",
			"date.fromNow.weeks.plural.fullWord",
			"date.fromNow.weeks.plural",
			"date.fromNow.months.singular.ago.fullWord",
			"date.fromNow.months.singular.ago",
			"date.fromNow.months.plural.ago.fullWord",
			"date.fromNow.months.plural.ago",
			"date.fromNow.months.singular.fullWord",
			"date.fromNow.months.singular",
			"date.fromNow.months.plural.fullWord",
			"date.fromNow.months.plural",
			"date.fromNow.years.singular.ago.fullWord",
			"date.fromNow.years.singular.ago",
			"date.fromNow.years.plural.ago.fullWord",
			"date.fromNow.years.plural.ago",
			"date.fromNow.years.singular.fullWord",
			"date.fromNow.years.singular",
			"date.fromNow.years.plural.fullWord",
			"date.fromNow.years.plural"
		],
		"vs/workbench/contrib/tasks/common/tasks": [
			"tasks.taskRunningContext",
			"tasksCategory",
			"TaskDefinition.missingRequiredProperty"
		],
		"vs/workbench/contrib/debug/common/abstractDebugAdapter": [
			"timeout"
		],
		"vs/workbench/services/configurationResolver/common/variableResolver": [
			"canNotResolveFile",
			"canNotResolveFolderForFile",
			"canNotFindFolder",
			"canNotResolveWorkspaceFolderMultiRoot",
			"canNotResolveWorkspaceFolder",
			"missingEnvVarName",
			"configNotFound",
			"configNoString",
			"missingConfigName",
			"extensionNotInstalled",
			"missingExtensionName",
			"canNotResolveUserHome",
			"canNotResolveLineNumber",
			"canNotResolveSelectedText",
			"noValueForCommand"
		],
		"vs/platform/externalTerminal/node/externalTerminalService": [
			"console.title",
			"mac.terminal.script.failed",
			"mac.terminal.type.not.supported",
			"press.any.key",
			"linux.term.failed",
			"ext.term.app.not.found"
		],
		"vs/workbench/contrib/debug/node/debugAdapter": [
			"debugAdapterBinNotFound",
			{
				"key": "debugAdapterCannotDetermineExecutable",
				"comment": [
					"Adapter executable file not found"
				]
			},
			"unableToLaunchDebugAdapter",
			"unableToLaunchDebugAdapterNoArgs"
		],
		"vs/workbench/services/remote/common/tunnelModel": [
			"tunnel.forwardedPortsViewEnabled",
			"tunnel.source.user",
			"tunnel.source.auto",
			"remote.localPortMismatch.single",
			"tunnel.staticallyForwarded"
		],
		"vs/platform/contextkey/common/scanner": [
			"contextkey.scanner.hint.didYouMean1",
			"contextkey.scanner.hint.didYouMean2",
			"contextkey.scanner.hint.didYouMean3",
			"contextkey.scanner.hint.didYouForgetToOpenOrCloseQuote",
			"contextkey.scanner.hint.didYouForgetToEscapeSlash"
		],
		"vs/platform/environment/node/argvHelper": [
			"multipleValues",
			"emptyValue",
			"deprecatedArgument",
			"unknownSubCommandOption",
			"unknownOption",
			"gotoValidation"
		],
		"vs/platform/terminal/common/terminalPlatformConfiguration": [
			"terminalProfile.args",
			"terminalProfile.overrideName",
			"terminalProfile.icon",
			"terminalProfile.color",
			"terminalProfile.env",
			"terminalProfile.path",
			"terminalAutomationProfile.path",
			{
				"key": "terminal.integrated.profile",
				"comment": [
					"{0} is the platform, {1} is a code block, {2} and {3} are a link start and end"
				]
			},
			"terminalIntegratedConfigurationTitle",
			"terminal.integrated.automationProfile.linux",
			"terminal.integrated.automationProfile.osx",
			"terminal.integrated.automationProfile.windows",
			"terminalProfile.windowsSource",
			"terminalProfile.windowsExtensionIdentifier",
			"terminalProfile.windowsExtensionId",
			"terminalProfile.windowsExtensionTitle",
			"terminalProfile.osxExtensionIdentifier",
			"terminalProfile.osxExtensionId",
			"terminalProfile.osxExtensionTitle",
			"terminalProfile.linuxExtensionIdentifier",
			"terminalProfile.linuxExtensionId",
			"terminalProfile.linuxExtensionTitle",
			"terminal.integrated.useWslProfiles",
			"terminal.integrated.inheritEnv",
			"terminal.integrated.persistentSessionScrollback",
			"terminal.integrated.showLinkHover",
			"terminal.integrated.confirmIgnoreProcesses",
			"terminalIntegratedConfigurationTitle",
			"terminal.integrated.defaultProfile.linux",
			"terminal.integrated.defaultProfile.osx",
			"terminal.integrated.defaultProfile.windows"
		],
		"vs/platform/telemetry/common/telemetryService": [
			"telemetry.telemetryLevelMd",
			"telemetry.docsStatement",
			"telemetry.docsAndPrivacyStatement",
			"telemetry.restart",
			"telemetry.crashReports",
			"telemetry.errors",
			"telemetry.usage",
			"telemetry.telemetryLevel.tableDescription",
			"telemetry.telemetryLevel.deprecated",
			"telemetryConfigurationTitle",
			"telemetry.telemetryLevel.default",
			"telemetry.telemetryLevel.error",
			"telemetry.telemetryLevel.crash",
			"telemetry.telemetryLevel.off",
			"telemetryConfigurationTitle",
			"telemetry.enableTelemetry",
			"telemetry.enableTelemetryMd",
			"enableTelemetryDeprecated"
		],
		"vs/workbench/common/editor": [
			"promptOpenWith.defaultEditor.displayName",
			"builtinProviderDisplayName",
			"openLargeFile",
			"configureEditorLargeFileConfirmation"
		],
		"vs/workbench/services/extensions/common/extensionsUtil": [
			"overwritingExtension",
			"overwritingExtension",
			"extensionUnderDevelopment"
		],
		"vs/workbench/services/search/common/queryBuilder": [
			"search.noWorkspaceWithName"
		],
		"vs/editor/common/languages": [
			"Array",
			"Boolean",
			"Class",
			"Constant",
			"Constructor",
			"Enum",
			"EnumMember",
			"Event",
			"Field",
			"File",
			"Function",
			"Interface",
			"Key",
			"Method",
			"Module",
			"Namespace",
			"Null",
			"Number",
			"Object",
			"Operator",
			"Package",
			"Property",
			"String",
			"Struct",
			"TypeParameter",
			"Variable",
			"symbolAriaLabel"
		],
		"vs/platform/markers/common/markers": [
			"sev.error",
			"sev.warning",
			"sev.info"
		],
		"vs/workbench/contrib/tasks/common/taskDefinitionRegistry": [
			"TaskDefinition.description",
			"TaskDefinition.properties",
			"TaskDefinition.when",
			"TaskTypeConfiguration.noType",
			"TaskDefinitionExtPoint"
		],
		"vs/workbench/api/common/extHostChatAgents2": [
			"errorResponse"
		],
		"vs/workbench/api/common/extHostDiagnostics": [
			{
				"key": "limitHit",
				"comment": [
					"amount of errors/warning skipped due to limits"
				]
			}
		],
		"vs/workbench/api/common/extHostNotebook": [
			"err.readonly",
			"fileModifiedError"
		],
		"vs/workbench/api/common/extHostLanguageFeatures": [
			"defaultPasteLabel",
			"defaultDropLabel"
		],
		"vs/workbench/api/common/extHostProgress": [
			"extensionSource"
		],
		"vs/workbench/api/common/extHostStatusBar": [
			"extensionLabel",
			"status.extensionMessage"
		],
		"vs/workbench/api/common/extHostTreeViews": [
			"treeView.duplicateElement"
		],
		"vs/workbench/contrib/debug/common/debug": [
			"debugType",
			"debugConfigurationType",
			"debugState",
			"debugUX",
			"hasDebugged",
			"inDebugMode",
			"inDebugRepl",
			"breakpointWidgetVisibile",
			"inBreakpointWidget",
			"breakpointsFocused",
			"watchExpressionsFocused",
			"watchExpressionsExist",
			"variablesFocused",
			"expressionSelected",
			"breakpointInputFocused",
			"callStackItemType",
			"callStackSessionIsAttach",
			"callStackItemStopped",
			"callStackSessionHasOneThread",
			"watchItemType",
			"canViewMemory",
			"breakpointItemType",
			"breakpointSupportsCondition",
			"loadedScriptsSupported",
			"loadedScriptsItemType",
			"focusedSessionIsAttach",
			"focusedSessionIsNoDebug",
			"stepBackSupported",
			"restartFrameSupported",
			"stackFrameSupportsRestart",
			"jumpToCursorSupported",
			"stepIntoTargetsSupported",
			"breakpointsExist",
			"debuggersAvailable",
			"debugExtensionsAvailable",
			"debugProtocolVariableMenuContext",
			"debugSetVariableSupported",
			"debugSetExpressionSupported",
			"breakWhenValueChangesSupported",
			"breakWhenValueIsAccessedSupported",
			"breakWhenValueIsReadSupported",
			"terminateDebuggeeSupported",
			"suspendDebuggeeSupported",
			"variableEvaluateNamePresent",
			"variableIsReadonly",
			"exceptionWidgetVisible",
			"multiSessionRepl",
			"multiSessionDebug",
			"disassembleRequestSupported",
			"disassemblyViewFocus",
			"languageSupportsDisassembleRequest",
			"focusedStackFrameHasInstructionReference",
			"debuggerDisabled",
			"internalConsoleOptions"
		],
		"vs/platform/dialogs/common/dialogs": [
			{
				"key": "yesButton",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"cancelButton",
			"cancelButton",
			"cancelButton",
			{
				"key": "okButton",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "okButton",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"cancelButton",
			"moreFile",
			"moreFiles"
		],
		"vs/platform/terminal/common/terminalProfiles": [
			"terminalAutomaticProfile"
		],
		"vs/base/common/actions": [
			"submenu.empty"
		],
		"vs/workbench/services/extensions/common/extensionsRegistry": [
			"ui",
			"workspace",
			"vscode.extension.engines",
			"vscode.extension.engines.vscode",
			"vscode.extension.publisher",
			"vscode.extension.displayName",
			"vscode.extension.categories",
			"vscode.extension.category.languages.deprecated",
			"vscode.extension.galleryBanner",
			"vscode.extension.galleryBanner.color",
			"vscode.extension.galleryBanner.theme",
			"vscode.extension.contributes",
			"vscode.extension.preview",
			"vscode.extension.enableProposedApi.deprecated",
			"vscode.extension.enabledApiProposals",
			"vscode.extension.api",
			"vscode.extension.api.none",
			"vscode.extension.activationEvents",
			"vscode.extension.activationEvents.onWebviewPanel",
			"vscode.extension.activationEvents.onLanguage",
			"vscode.extension.activationEvents.onCommand",
			"vscode.extension.activationEvents.onDebug",
			"vscode.extension.activationEvents.onDebugInitialConfigurations",
			"vscode.extension.activationEvents.onDebugDynamicConfigurations",
			"vscode.extension.activationEvents.onDebugResolve",
			"vscode.extension.activationEvents.onDebugAdapterProtocolTracker",
			"vscode.extension.activationEvents.workspaceContains",
			"vscode.extension.activationEvents.onStartupFinished",
			"vscode.extension.activationEvents.onTaskType",
			"vscode.extension.activationEvents.onFileSystem",
			"vscode.extension.activationEvents.onEditSession",
			"vscode.extension.activationEvents.onSearch",
			"vscode.extension.activationEvents.onView",
			"vscode.extension.activationEvents.onUri",
			"vscode.extension.activationEvents.onOpenExternalUri",
			"vscode.extension.activationEvents.onCustomEditor",
			"vscode.extension.activationEvents.onNotebook",
			"vscode.extension.activationEvents.onAuthenticationRequest",
			"vscode.extension.activationEvents.onRenderer",
			"vscode.extension.activationEvents.onTerminalProfile",
			"vscode.extension.activationEvents.onTerminalQuickFixRequest",
			"vscode.extension.activationEvents.onWalkthrough",
			"vscode.extension.activationEvents.onIssueReporterOpened",
			"vscode.extension.activationEvents.star",
			"vscode.extension.badges",
			"vscode.extension.badges.url",
			"vscode.extension.badges.href",
			"vscode.extension.badges.description",
			"vscode.extension.markdown",
			"vscode.extension.qna",
			"vscode.extension.extensionDependencies",
			"vscode.extension.contributes.extensionPack",
			"extensionKind",
			"extensionKind.ui",
			"extensionKind.workspace",
			"extensionKind.ui-workspace",
			"extensionKind.workspace-ui",
			"extensionKind.empty",
			"vscode.extension.capabilities",
			"vscode.extension.capabilities.virtualWorkspaces",
			"vscode.extension.capabilities.virtualWorkspaces.supported",
			"vscode.extension.capabilities.virtualWorkspaces.supported.limited",
			"vscode.extension.capabilities.virtualWorkspaces.supported.true",
			"vscode.extension.capabilities.virtualWorkspaces.supported.false",
			"vscode.extension.capabilities.virtualWorkspaces.description",
			"vscode.extension.capabilities.untrustedWorkspaces",
			"vscode.extension.capabilities.untrustedWorkspaces.supported",
			"vscode.extension.capabilities.untrustedWorkspaces.supported.limited",
			"vscode.extension.capabilities.untrustedWorkspaces.supported.true",
			"vscode.extension.capabilities.untrustedWorkspaces.supported.false",
			"vscode.extension.capabilities.untrustedWorkspaces.restrictedConfigurations",
			"vscode.extension.capabilities.untrustedWorkspaces.description",
			"vscode.extension.contributes.sponsor",
			"vscode.extension.contributes.sponsor.url",
			"vscode.extension.scripts.prepublish",
			"vscode.extension.scripts.uninstall",
			"vscode.extension.icon",
			{
				"key": "vscode.extension.l10n",
				"comment": [
					"{Locked=\"bundle.l10n._locale_.json\"}",
					"{Locked=\"vscode.l10n API\"}"
				]
			},
			"vscode.extension.pricing",
			"product.extensionEnabledApiProposals"
		],
		"vs/workbench/services/editor/common/editorResolverService": [
			"editor.editorAssociations"
		],
		"vs/workbench/common/views": [
			"views log",
			"defaultViewIcon",
			"duplicateId",
			"treeView.notRegistered"
		],
		"vs/workbench/common/configuration": [
			"applicationConfigurationTitle",
			"workbenchConfigurationTitle",
			"securityConfigurationTitle",
			"security.allowedUNCHosts.patternErrorMessage",
			"security.allowedUNCHosts",
			"security.restrictUNCAccess"
		],
		"vs/platform/theme/common/iconRegistry": [
			"iconDefinition.fontId",
			"iconDefinition.fontCharacter",
			"widgetClose",
			"previousChangeIcon",
			"nextChangeIcon"
		]
	},
	"messages": {
		"vs/platform/terminal/node/ptyHostMain": [
			"Pty Host"
		],
		"vs/server/node/remoteExtensionHostAgentCli": [
			"Remote CLI"
		],
		"vs/platform/environment/node/argv": [
			"Options",
			"Extensions Management",
			"Troubleshooting",
			"Directory where CLI metadata should be stored.",
			"Directory where CLI metadata should be stored.",
			"Compare two files with each other.",
			"Perform a three-way merge by providing paths for two modified versions of a file, the common origin of both modified versions and the output file to save merge results.",
			"Add folder(s) to the last active window.",
			"Open a file at the path on the specified line and character position.",
			"Force to open a new window.",
			"Force to open a file or folder in an already opened window.",
			"Wait for the files to be closed before returning.",
			"The locale to use (e.g. en-US or zh-TW).",
			"Specifies the directory that user data is kept in. Can be used to open multiple distinct instances of Code.",
			"Opens the provided folder or workspace with the given profile and associates the profile with the workspace. If the profile does not exist, a new empty one is created.",
			"Print usage.",
			"Set the root path for extensions.",
			"List the installed extensions.",
			"Show versions of installed extensions, when using --list-extensions.",
			"Filters installed extensions by provided category, when using --list-extensions.",
			"Installs or updates an extension. The argument is either an extension id or a path to a VSIX. The identifier of an extension is '${publisher}.${name}'. Use '--force' argument to update to latest version. To install a specific version provide '@${version}'. For example: 'vscode.csharp@1.2.3'.",
			"Installs the pre-release version of the extension, when using --install-extension",
			"Uninstalls an extension.",
			"Enables proposed API features for extensions. Can receive one or more extension IDs to enable individually.",
			"Print version.",
			"Print verbose output (implies --wait).",
			"Log level to use. Default is 'info'. Allowed values are 'critical', 'error', 'warn', 'info', 'debug', 'trace', 'off'. You can also configure the log level of an extension by passing extension id and log level in the following format: '${publisher}.${name}:${logLevel}'. For example: 'vscode.csharp:trace'. Can receive one or more such entries.",
			"Print process usage and diagnostics information.",
			"Run CPU profiler during startup.",
			"Disable all installed extensions. This option is not persisted and is effective only when the command opens a new window.",
			"Disable the provided extension. This option is not persisted and is effective only when the command opens a new window.",
			"Turn sync on or off.",
			"Allow debugging and profiling of extensions. Check the developer tools for the connection URI.",
			"Allow debugging and profiling of extensions with the extension host being paused after start. Check the developer tools for the connection URI.",
			"Disable GPU hardware acceleration.",
			"Use this option only when there is requirement to launch the application as sudo user on Linux or when running as an elevated user in an applocker environment on Windows.",
			"Shows all telemetry events which VS code collects.",
			"Use {0} instead.",
			"paths",
			"Usage",
			"options",
			"To read output from another program, append '-' (e.g. 'echo Hello World | {0} -')",
			"To read from stdin, append '-' (e.g. 'ps aux | grep code | {0} -')",
			"Subcommands",
			"Unknown version",
			"Unknown commit"
		],
		"vs/server/node/serverEnvironmentService": [
			"The host name or IP address the server should listen to. If not set, defaults to 'localhost'.",
			"The port the server should listen to. If 0 is passed a random free port is picked. If a range in the format num-num is passed, a free port from the range (end inclusive) is selected.",
			"The path to a socket file for the server to listen to.",
			"A secret that must be included with all requests.",
			"Path to a file that contains the connection token.",
			"Run without a connection token. Only use this if the connection is secured by other means.",
			"If set, the user accepts the server license terms and the server will be started without a user prompt.",
			"Specifies the directory that server data is kept in.",
			"Sets the initial telemetry level. Valid levels are: 'off', 'crash', 'error' and 'all'. If not specified, the server will send telemetry until a client connects, it will then use the clients telemetry setting. Setting this to 'off' is equivalent to --disable-telemetry",
			"The workspace folder to open when no input is specified in the browser URL. A relative or absolute path resolved against the current working directory.",
			"The workspace to open when no input is specified in the browser URL. A relative or absolute path resolved against the current working directory.",
			"Start the server when installing or uninstalling extensions. To be used in combination with 'install-extension', 'install-builtin-extension' and 'uninstall-extension'."
		],
		"vs/editor/common/config/editorOptions": [
			"Use platform APIs to detect when a Screen Reader is attached.",
			"Optimize for usage with a Screen Reader.",
			"Assume a screen reader is not attached.",
			"Controls if the UI should run in a mode where it is optimized for screen readers.",
			"Controls whether a space character is inserted when commenting.",
			"Controls if empty lines should be ignored with toggle, add or remove actions for line comments.",
			"Controls whether copying without a selection copies the current line.",
			"Controls whether the cursor should jump to find matches while typing.",
			"Never seed search string from the editor selection.",
			"Always seed search string from the editor selection, including word at cursor position.",
			"Only seed search string from the editor selection.",
			"Controls whether the search string in the Find Widget is seeded from the editor selection.",
			"Never turn on Find in Selection automatically (default).",
			"Always turn on Find in Selection automatically.",
			"Turn on Find in Selection automatically when multiple lines of content are selected.",
			"Controls the condition for turning on Find in Selection automatically.",
			"Controls whether the Find Widget should read or modify the shared find clipboard on macOS.",
			"Controls whether the Find Widget should add extra lines on top of the editor. When true, you can scroll beyond the first line when the Find Widget is visible.",
			"Controls whether the search automatically restarts from the beginning (or the end) when no further matches can be found.",
			"Enables/Disables font ligatures ('calt' and 'liga' font features). Change this to a string for fine-grained control of the 'font-feature-settings' CSS property.",
			"Explicit 'font-feature-settings' CSS property. A boolean can be passed instead if one only needs to turn on/off ligatures.",
			"Configures font ligatures or font features. Can be either a boolean to enable/disable ligatures or a string for the value of the CSS 'font-feature-settings' property.",
			"Enables/Disables the translation from font-weight to font-variation-settings. Change this to a string for fine-grained control of the 'font-variation-settings' CSS property.",
			"Explicit 'font-variation-settings' CSS property. A boolean can be passed instead if one only needs to translate font-weight to font-variation-settings.",
			"Configures font variations. Can be either a boolean to enable/disable the translation from font-weight to font-variation-settings or a string for the value of the CSS 'font-variation-settings' property.",
			"Controls the font size in pixels.",
			"Only \"normal\" and \"bold\" keywords or numbers between 1 and 1000 are allowed.",
			"Controls the font weight. Accepts \"normal\" and \"bold\" keywords or numbers between 1 and 1000.",
			"Show Peek view of the results (default)",
			"Go to the primary result and show a Peek view",
			"Go to the primary result and enable Peek-less navigation to others",
			"This setting is deprecated, please use separate settings like 'editor.editor.gotoLocation.multipleDefinitions' or 'editor.editor.gotoLocation.multipleImplementations' instead.",
			"Controls the behavior the 'Go to Definition'-command when multiple target locations exist.",
			"Controls the behavior the 'Go to Type Definition'-command when multiple target locations exist.",
			"Controls the behavior the 'Go to Declaration'-command when multiple target locations exist.",
			"Controls the behavior the 'Go to Implementations'-command when multiple target locations exist.",
			"Controls the behavior the 'Go to References'-command when multiple target locations exist.",
			"Alternative command id that is being executed when the result of 'Go to Definition' is the current location.",
			"Alternative command id that is being executed when the result of 'Go to Type Definition' is the current location.",
			"Alternative command id that is being executed when the result of 'Go to Declaration' is the current location.",
			"Alternative command id that is being executed when the result of 'Go to Implementation' is the current location.",
			"Alternative command id that is being executed when the result of 'Go to Reference' is the current location.",
			"Controls whether the hover is shown.",
			"Controls the delay in milliseconds after which the hover is shown.",
			"Controls whether the hover should remain visible when mouse is moved over it.",
			"Controls the delay in milliseconds after which the hover is hidden. Requires `editor.hover.sticky` to be enabled.",
			"Prefer showing hovers above the line, if there's space.",
			"Assumes that all characters are of the same width. This is a fast algorithm that works correctly for monospace fonts and certain scripts (like Latin characters) where glyphs are of equal width.",
			"Delegates wrapping points computation to the browser. This is a slow algorithm, that might cause freezes for large files, but it works correctly in all cases.",
			"Controls the algorithm that computes wrapping points. Note that when in accessibility mode, advanced will be used for the best experience.",
			"Enables the Code Action lightbulb in the editor.",
			"Don not show the AI icon.",
			"Show an AI icon when the code action menu contains an AI action, but only on code.",
			"Show an AI icon when the code action menu contains an AI action, on code and empty lines.",
			"Show an AI icon along with the lightbulb when the code action menu contains an AI action.",
			"Shows the nested current scopes during the scroll at the top of the editor.",
			"Defines the maximum number of sticky lines to show.",
			"Defines the model to use for determining which lines to stick. If the outline model does not exist, it will fall back on the folding provider model which falls back on the indentation model. This order is respected in all three cases.",
			"Enable scrolling of Sticky Scroll with the editor's horizontal scrollbar.",
			"Enables the inlay hints in the editor.",
			"Inlay hints are enabled",
			"Inlay hints are showing by default and hide when holding {0}",
			"Inlay hints are hidden by default and show when holding {0}",
			"Inlay hints are disabled",
			"Controls font size of inlay hints in the editor. As default the {0} is used when the configured value is less than {1} or greater than the editor font size.",
			"Controls font family of inlay hints in the editor. When set to empty, the {0} is used.",
			"Enables the padding around the inlay hints in the editor.",
			"Controls the line height. \n - Use 0 to automatically compute the line height from the font size.\n - Values between 0 and 8 will be used as a multiplier with the font size.\n - Values greater than or equal to 8 will be used as effective values.",
			"Controls whether the minimap is shown.",
			"Controls whether the minimap is hidden automatically.",
			"The minimap has the same size as the editor contents (and might scroll).",
			"The minimap will stretch or shrink as necessary to fill the height of the editor (no scrolling).",
			"The minimap will shrink as necessary to never be larger than the editor (no scrolling).",
			"Controls the size of the minimap.",
			"Controls the side where to render the minimap.",
			"Controls when the minimap slider is shown.",
			"Scale of content drawn in the minimap: 1, 2 or 3.",
			"Render the actual characters on a line as opposed to color blocks.",
			"Limit the width of the minimap to render at most a certain number of columns.",
			"Controls the amount of space between the top edge of the editor and the first line.",
			"Controls the amount of space between the bottom edge of the editor and the last line.",
			"Enables a pop-up that shows parameter documentation and type information as you type.",
			"Controls whether the parameter hints menu cycles or closes when reaching the end of the list.",
			"Quick suggestions show inside the suggest widget",
			"Quick suggestions show as ghost text",
			"Quick suggestions are disabled",
			"Enable quick suggestions inside strings.",
			"Enable quick suggestions inside comments.",
			"Enable quick suggestions outside of strings and comments.",
			"Controls whether suggestions should automatically show up while typing. This can be controlled for typing in comments, strings, and other code. Quick suggestion can be configured to show as ghost text or with the suggest widget. Also be aware of the '{0}'-setting which controls if suggestions are triggered by special characters.",
			"Line numbers are not rendered.",
			"Line numbers are rendered as absolute number.",
			"Line numbers are rendered as distance in lines to cursor position.",
			"Line numbers are rendered every 10 lines.",
			"Controls the display of line numbers.",
			"Number of monospace characters at which this editor ruler will render.",
			"Color of this editor ruler.",
			"Render vertical rulers after a certain number of monospace characters. Use multiple values for multiple rulers. No rulers are drawn if array is empty.",
			"The vertical scrollbar will be visible only when necessary.",
			"The vertical scrollbar will always be visible.",
			"The vertical scrollbar will always be hidden.",
			"Controls the visibility of the vertical scrollbar.",
			"The horizontal scrollbar will be visible only when necessary.",
			"The horizontal scrollbar will always be visible.",
			"The horizontal scrollbar will always be hidden.",
			"Controls the visibility of the horizontal scrollbar.",
			"The width of the vertical scrollbar.",
			"The height of the horizontal scrollbar.",
			"Controls whether clicks scroll by page or jump to click position.",
			"When set, the horizontal scrollbar will not increase the size of the editor's content.",
			"Controls whether all non-basic ASCII characters are highlighted. Only characters between U+0020 and U+007E, tab, line-feed and carriage-return are considered basic ASCII.",
			"Controls whether characters that just reserve space or have no width at all are highlighted.",
			"Controls whether characters are highlighted that can be confused with basic ASCII characters, except those that are common in the current user locale.",
			"Controls whether characters in comments should also be subject to Unicode highlighting.",
			"Controls whether characters in strings should also be subject to Unicode highlighting.",
			"Defines allowed characters that are not being highlighted.",
			"Unicode characters that are common in allowed locales are not being highlighted.",
			"Controls whether to automatically show inline suggestions in the editor.",
			"Show the inline suggestion toolbar whenever an inline suggestion is shown.",
			"Show the inline suggestion toolbar when hovering over an inline suggestion.",
			"Never show the inline suggestion toolbar.",
			"Controls when to show the inline suggestion toolbar.",
			"Controls how inline suggestions interact with the suggest widget. If enabled, the suggest widget is not shown automatically when inline suggestions are available.",
			"Controls whether bracket pair colorization is enabled or not. Use {0} to override the bracket highlight colors.",
			"Controls whether each bracket type has its own independent color pool.",
			"Enables bracket pair guides.",
			"Enables bracket pair guides only for the active bracket pair.",
			"Disables bracket pair guides.",
			"Controls whether bracket pair guides are enabled or not.",
			"Enables horizontal guides as addition to vertical bracket pair guides.",
			"Enables horizontal guides only for the active bracket pair.",
			"Disables horizontal bracket pair guides.",
			"Controls whether horizontal bracket pair guides are enabled or not.",
			"Controls whether the editor should highlight the active bracket pair.",
			"Controls whether the editor should render indent guides.",
			"Highlights the active indent guide.",
			"Highlights the active indent guide even if bracket guides are highlighted.",
			"Do not highlight the active indent guide.",
			"Controls whether the editor should highlight the active indent guide.",
			"Insert suggestion without overwriting text right of the cursor.",
			"Insert suggestion and overwrite text right of the cursor.",
			"Controls whether words are overwritten when accepting completions. Note that this depends on extensions opting into this feature.",
			"Controls whether filtering and sorting suggestions accounts for small typos.",
			"Controls whether sorting favors words that appear close to the cursor.",
			"Controls whether remembered suggestion selections are shared between multiple workspaces and windows (needs `#editor.suggestSelection#`).",
			"Always select a suggestion when automatically triggering IntelliSense.",
			"Never select a suggestion when automatically triggering IntelliSense.",
			"Select a suggestion only when triggering IntelliSense from a trigger character.",
			"Select a suggestion only when triggering IntelliSense as you type.",
			"Controls whether a suggestion is selected when the widget shows. Note that this only applies to automatically triggered suggestions (`#editor.quickSuggestions#` and `#editor.suggestOnTriggerCharacters#`) and that a suggestion is always selected when explicitly invoked, e.g via `Ctrl+Space`.",
			"Controls whether an active snippet prevents quick suggestions.",
			"Controls whether to show or hide icons in suggestions.",
			"Controls the visibility of the status bar at the bottom of the suggest widget.",
			"Controls whether to preview the suggestion outcome in the editor.",
			"Controls whether suggest details show inline with the label or only in the details widget.",
			"This setting is deprecated. The suggest widget can now be resized.",
			"This setting is deprecated, please use separate settings like 'editor.suggest.showKeywords' or 'editor.suggest.showSnippets' instead.",
			"When enabled IntelliSense shows `method`-suggestions.",
			"When enabled IntelliSense shows `function`-suggestions.",
			"When enabled IntelliSense shows `constructor`-suggestions.",
			"When enabled IntelliSense shows `deprecated`-suggestions.",
			"When enabled IntelliSense filtering requires that the first character matches on a word start. For example, `c` on `Console` or `WebContext` but _not_ on `description`. When disabled IntelliSense will show more results but still sorts them by match quality.",
			"When enabled IntelliSense shows `field`-suggestions.",
			"When enabled IntelliSense shows `variable`-suggestions.",
			"When enabled IntelliSense shows `class`-suggestions.",
			"When enabled IntelliSense shows `struct`-suggestions.",
			"When enabled IntelliSense shows `interface`-suggestions.",
			"When enabled IntelliSense shows `module`-suggestions.",
			"When enabled IntelliSense shows `property`-suggestions.",
			"When enabled IntelliSense shows `event`-suggestions.",
			"When enabled IntelliSense shows `operator`-suggestions.",
			"When enabled IntelliSense shows `unit`-suggestions.",
			"When enabled IntelliSense shows `value`-suggestions.",
			"When enabled IntelliSense shows `constant`-suggestions.",
			"When enabled IntelliSense shows `enum`-suggestions.",
			"When enabled IntelliSense shows `enumMember`-suggestions.",
			"When enabled IntelliSense shows `keyword`-suggestions.",
			"When enabled IntelliSense shows `text`-suggestions.",
			"When enabled IntelliSense shows `color`-suggestions.",
			"When enabled IntelliSense shows `file`-suggestions.",
			"When enabled IntelliSense shows `reference`-suggestions.",
			"When enabled IntelliSense shows `customcolor`-suggestions.",
			"When enabled IntelliSense shows `folder`-suggestions.",
			"When enabled IntelliSense shows `typeParameter`-suggestions.",
			"When enabled IntelliSense shows `snippet`-suggestions.",
			"When enabled IntelliSense shows `user`-suggestions.",
			"When enabled IntelliSense shows `issues`-suggestions.",
			"Whether leading and trailing whitespace should always be selected.",
			"Whether subwords (like 'foo' in 'fooBar' or 'foo_bar') should be selected.",
			"No indentation. Wrapped lines begin at column 1.",
			"Wrapped lines get the same indentation as the parent.",
			"Wrapped lines get +1 indentation toward the parent.",
			"Wrapped lines get +2 indentation toward the parent.",
			"Controls the indentation of wrapped lines.",
			"Controls whether you can drag and drop a file into a text editor by holding down `Shift`-key (instead of opening the file in an editor).",
			"Controls if a widget is shown when dropping files into the editor. This widget lets you control how the file is dropped.",
			"Show the drop selector widget after a file is dropped into the editor.",
			"Never show the drop selector widget. Instead the default drop provider is always used.",
			"Controls whether you can paste content in different ways.",
			"Controls if a widget is shown when pasting content in to the editor. This widget lets you control how the file is pasted.",
			"Show the paste selector widget after content is pasted into the editor.",
			"Never show the paste selector widget. Instead the default pasting behavior is always used.",
			"Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.",
			"Only accept a suggestion with `Enter` when it makes a textual change.",
			"Controls whether suggestions should be accepted on `Enter`, in addition to `Tab`. Helps to avoid ambiguity between inserting new lines or accepting suggestions.",
			"Controls the number of lines in the editor that can be read out by a screen reader at once. When we detect a screen reader we automatically set the default to be 500. Warning: this has a performance implication for numbers larger than the default.",
			"Editor content",
			"Control whether inline suggestions are announced by a screen reader.",
			"Use language configurations to determine when to autoclose brackets.",
			"Autoclose brackets only when the cursor is to the left of whitespace.",
			"Controls whether the editor should automatically close brackets after the user adds an opening bracket.",
			"Use language configurations to determine when to autoclose comments.",
			"Autoclose comments only when the cursor is to the left of whitespace.",
			"Controls whether the editor should automatically close comments after the user adds an opening comment.",
			"Remove adjacent closing quotes or brackets only if they were automatically inserted.",
			"Controls whether the editor should remove adjacent closing quotes or brackets when deleting.",
			"Type over closing quotes or brackets only if they were automatically inserted.",
			"Controls whether the editor should type over closing quotes or brackets.",
			"Use language configurations to determine when to autoclose quotes.",
			"Autoclose quotes only when the cursor is to the left of whitespace.",
			"Controls whether the editor should automatically close quotes after the user adds an opening quote.",
			"The editor will not insert indentation automatically.",
			"The editor will keep the current line's indentation.",
			"The editor will keep the current line's indentation and honor language defined brackets.",
			"The editor will keep the current line's indentation, honor language defined brackets and invoke special onEnterRules defined by languages.",
			"The editor will keep the current line's indentation, honor language defined brackets, invoke special onEnterRules defined by languages, and honor indentationRules defined by languages.",
			"Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.",
			"Use language configurations to determine when to automatically surround selections.",
			"Surround with quotes but not brackets.",
			"Surround with brackets but not quotes.",
			"Controls whether the editor should automatically surround selections when typing quotes or brackets.",
			"Emulate selection behavior of tab characters when using spaces for indentation. Selection will stick to tab stops.",
			"Controls whether the editor shows CodeLens.",
			"Controls the font family for CodeLens.",
			"Controls the font size in pixels for CodeLens. When set to 0, 90% of `#editor.fontSize#` is used.",
			"Controls whether the editor should render the inline color decorators and color picker.",
			"Make the color picker appear both on click and hover of the color decorator",
			"Make the color picker appear on hover of the color decorator",
			"Make the color picker appear on click of the color decorator",
			"Controls the condition to make a color picker appear from a color decorator",
			"Controls the max number of color decorators that can be rendered in an editor at once.",
			"Enable that the selection with the mouse and keys is doing column selection.",
			"Controls whether syntax highlighting should be copied into the clipboard.",
			"Control the cursor animation style.",
			"Smooth caret animation is disabled.",
			"Smooth caret animation is enabled only when the user moves the cursor with an explicit gesture.",
			"Smooth caret animation is always enabled.",
			"Controls whether the smooth caret animation should be enabled.",
			"Controls the cursor style.",
			"Controls the minimal number of visible leading lines (minimum 0) and trailing lines (minimum 1) surrounding the cursor. Known as 'scrollOff' or 'scrollOffset' in some other editors.",
			"`cursorSurroundingLines` is enforced only when triggered via the keyboard or API.",
			"`cursorSurroundingLines` is enforced always.",
			"Controls when `#cursorSurroundingLines#` should be enforced.",
			"Controls the width of the cursor when `#editor.cursorStyle#` is set to `line`.",
			"Controls whether the editor should allow moving selections via drag and drop.",
			"Use a new rendering method with svgs.",
			"Use a new rendering method with font characters.",
			"Use the stable rendering method.",
			"Controls whether whitespace is rendered with a new, experimental method.",
			"Scrolling speed multiplier when pressing `Alt`.",
			"Controls whether the editor has code folding enabled.",
			"Use a language-specific folding strategy if available, else the indentation-based one.",
			"Use the indentation-based folding strategy.",
			"Controls the strategy for computing folding ranges.",
			"Controls whether the editor should highlight folded ranges.",
			"Controls whether the editor automatically collapses import ranges.",
			"The maximum number of foldable regions. Increasing this value may result in the editor becoming less responsive when the current source has a large number of foldable regions.",
			"Controls whether clicking on the empty content after a folded line will unfold the line.",
			"Controls the font family.",
			"Controls whether the editor should automatically format the pasted content. A formatter must be available and the formatter should be able to format a range in a document.",
			"Controls whether the editor should automatically format the line after typing.",
			"Controls whether the editor should render the vertical glyph margin. Glyph margin is mostly used for debugging.",
			"Controls whether the cursor should be hidden in the overview ruler.",
			"Controls the letter spacing in pixels.",
			"Controls whether the editor has linked editing enabled. Depending on the language, related symbols such as HTML tags, are updated while editing.",
			"Controls whether the editor should detect links and make them clickable.",
			"Highlight matching brackets.",
			"A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.",
			"Zoom the font of the editor when using mouse wheel and holding `Ctrl`.",
			"Merge multiple cursors when they are overlapping.",
			"Maps to `Control` on Windows and Linux and to `Command` on macOS.",
			"Maps to `Alt` on Windows and Linux and to `Option` on macOS.",
			"The modifier to be used to add multiple cursors with the mouse. The Go to Definition and Open Link mouse gestures will adapt such that they do not conflict with the [multicursor modifier](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).",
			"Each cursor pastes a single line of the text.",
			"Each cursor pastes the full text.",
			"Controls pasting when the line count of the pasted text matches the cursor count.",
			"Controls the max number of cursors that can be in an active editor at once.",
			"Does not highlight occurrences.",
			"Highlights occurrences only in the current file.",
			"Experimental: Highlights occurrences across all valid open files.",
			"Controls whether occurrences should be highlighted across open files.",
			"Controls whether a border should be drawn around the overview ruler.",
			"Focus the tree when opening peek",
			"Focus the editor when opening peek",
			"Controls whether to focus the inline editor or the tree in the peek widget.",
			"Controls whether the Go to Definition mouse gesture always opens the peek widget.",
			"Controls the delay in milliseconds after which quick suggestions will show up.",
			"Controls whether the editor auto renames on type.",
			"Deprecated, use `editor.linkedEditing` instead.",
			"Controls whether the editor should render control characters.",
			"Render last line number when the file ends with a newline.",
			"Highlights both the gutter and the current line.",
			"Controls how the editor should render the current line highlight.",
			"Controls if the editor should render the current line highlight only when the editor is focused.",
			"Render whitespace characters except for single spaces between words.",
			"Render whitespace characters only on selected text.",
			"Render only trailing whitespace characters.",
			"Controls how the editor should render whitespace characters.",
			"Controls whether selections should have rounded corners.",
			"Controls the number of extra characters beyond which the editor will scroll horizontally.",
			"Controls whether the editor will scroll beyond the last line.",
			"Scroll only along the predominant axis when scrolling both vertically and horizontally at the same time. Prevents horizontal drift when scrolling vertically on a trackpad.",
			"Controls whether the Linux primary clipboard should be supported.",
			"Controls whether the editor should highlight matches similar to the selection.",
			"Always show the folding controls.",
			"Never show the folding controls and reduce the gutter size.",
			"Only show the folding controls when the mouse is over the gutter.",
			"Controls when the folding controls on the gutter are shown.",
			"Controls fading out of unused code.",
			"Controls strikethrough deprecated variables.",
			"Show snippet suggestions on top of other suggestions.",
			"Show snippet suggestions below other suggestions.",
			"Show snippets suggestions with other suggestions.",
			"Do not show snippet suggestions.",
			"Controls whether snippets are shown with other suggestions and how they are sorted.",
			"Controls whether the editor will scroll using an animation.",
			"Controls whether the accessibility hint should be provided to screen reader users when an inline completion is shown.",
			"Font size for the suggest widget. When set to {0}, the value of {1} is used.",
			"Line height for the suggest widget. When set to {0}, the value of {1} is used. The minimum value is 8.",
			"Controls whether suggestions should automatically show up when typing trigger characters.",
			"Always select the first suggestion.",
			"Select recent suggestions unless further typing selects one, e.g. `console.| -> console.log` because `log` has been completed recently.",
			"Select suggestions based on previous prefixes that have completed those suggestions, e.g. `co -> console` and `con -> const`.",
			"Controls how suggestions are pre-selected when showing the suggest list.",
			"Tab complete will insert the best matching suggestion when pressing tab.",
			"Disable tab completions.",
			"Tab complete snippets when their prefix match. Works best when 'quickSuggestions' aren't enabled.",
			"Enables tab completions.",
			"Unusual line terminators are automatically removed.",
			"Unusual line terminators are ignored.",
			"Unusual line terminators prompt to be removed.",
			"Remove unusual line terminators that might cause problems.",
			"Inserting and deleting whitespace follows tab stops.",
			"Use the default line break rule.",
			"Word breaks should not be used for Chinese/Japanese/Korean (CJK) text. Non-CJK text behavior is the same as for normal.",
			"Controls the word break rules used for Chinese/Japanese/Korean (CJK) text.",
			"Characters that will be used as word separators when doing word related navigations or operations.",
			"Lines will never wrap.",
			"Lines will wrap at the viewport width.",
			"Lines will wrap at `#editor.wordWrapColumn#`.",
			"Lines will wrap at the minimum of viewport and `#editor.wordWrapColumn#`.",
			"Controls how lines should wrap.",
			"Controls the wrapping column of the editor when `#editor.wordWrap#` is `wordWrapColumn` or `bounded`.",
			"Controls whether inline color decorations should be shown using the default document color provider",
			"Controls whether the editor receives tabs or defers them to the workbench for navigation."
		],
		"vs/platform/terminal/node/ptyService": [
			"History restored"
		],
		"vs/platform/request/common/request": [
			"Network Requests",
			"HTTP",
			"The proxy setting to use. If not set, will be inherited from the `http_proxy` and `https_proxy` environment variables.",
			"Controls whether the proxy server certificate should be verified against the list of supplied CAs.",
			"Overrides the principal service name for Kerberos authentication with the HTTP proxy. A default based on the proxy hostname is used when this is not set.",
			"The value to send as the `Proxy-Authorization` header for every network request.",
			"Disable proxy support for extensions.",
			"Enable proxy support for extensions.",
			"Enable proxy support for extensions, fall back to request options, when no proxy found.",
			"Enable proxy support for extensions, override request options.",
			"Use the proxy support for extensions.",
			"Controls whether CA certificates should be loaded from the OS. (On Windows and macOS, a reload of the window is required after turning this off.)",
			"Controls whether experimental loading of CA certificates from the OS should be enabled. This uses a more general approach than the default implemenation."
		],
		"vs/platform/extensionManagement/common/extensionManagement": [
			"Extensions",
			"Preferences"
		],
		"vs/platform/extensionManagement/node/extensionManagementService": [
			"Unable to install extension '{0}' as it is not compatible with VS Code '{1}'.",
			"Marketplace is not enabled",
			"Only Marketplace Extensions can be reinstalled",
			"Error while removing the extension: {0}. Please Quit and Start VS Code before trying again.",
			"Unable to delete the existing folder '{0}' while installing the extension '{1}'. Please delete the folder manually and try again",
			"Unknown error while renaming {0} to {1}",
			"Cannot read the extension from {0}",
			"Please restart VS Code before reinstalling {0}.",
			"Please restart VS Code before reinstalling {0}."
		],
		"vs/platform/files/node/diskFileSystemProvider": [
			"File already exists",
			"File does not exist",
			"Unable to move '{0}' into '{1}' ({2}).",
			"Unable to copy '{0}' into '{1}' ({2}).",
			"File cannot be copied to same path with different path case",
			"File to move/copy does not exist",
			"File at target already exists and thus will not be moved/copied to unless overwrite is specified"
		],
		"vs/platform/files/common/fileService": [
			"Unable to resolve filesystem provider with relative file path '{0}'",
			"ENOPRO: No file system provider found for resource '{0}'",
			"Unable to resolve nonexistent file '{0}'",
			"Unable to create file '{0}' that already exists when overwrite flag is not set",
			"Unable to write file '{0}' ({1})",
			"Unable to unlock file '{0}' because provider does not support it.",
			"Unable to atomically write file '{0}' because provider does not support it.",
			"Unable to atomically write file '{0}' because provider does not support unbuffered writes.",
			"Unable to unlock file '{0}' because atomic write is enabled.",
			"Unable to write file '{0}' that is actually a directory",
			"File Modified Since",
			"Unable to read file '{0}' ({1})",
			"Unable to read file '{0}' that is actually a directory",
			"File not modified since",
			"Unable to read file '{0}' that is too large to open",
			"Unable to copy when source '{0}' is same as target '{1}' with different path case on a case insensitive file system",
			"Unable to move/copy when source '{0}' is parent of target '{1}'.",
			"Unable to move/copy '{0}' because target '{1}' already exists at destination.",
			"Unable to move/copy '{0}' into '{1}' since a file would replace the folder it is contained in.",
			"Unable to create folder '{0}' that already exists but is not a directory",
			"Unable to delete file '{0}' via trash because provider does not support it.",
			"Unable to delete file '{0}' atomically because provider does not support it.",
			"Unable to atomically delete file '{0}' because using trash is enabled.",
			"Unable to delete nonexistent file '{0}'",
			"Unable to delete non-empty folder '{0}'.",
			"Unable to modify read-only file '{0}'",
			"Unable to modify read-only file '{0}'"
		],
		"vs/platform/files/common/files": [
			"Unknown Error",
			"{0}B",
			"{0}KB",
			"{0}MB",
			"{0}GB",
			"{0}TB"
		],
		"vs/platform/languagePacks/common/languagePacks": [
			" (Current)"
		],
		"vs/platform/extensionManagement/common/extensionManagementCLI": [
			"Extension '{0}' not found.",
			"Make sure you use the full extension ID, including the publisher, e.g.: {0}",
			"Extensions installed on {0}:",
			"Installing extensions on {0}...",
			"Installing extensions...",
			"Extension '{0}' v{1} is already installed. Use '--force' option to update to latest version or provide '@<version>' to install a specific version, for example: '{2}@1.2.3'.",
			"Extension '{0}' is already installed.",
			"Error while installing extensions: {0}",
			"Failed Installing Extensions: {0}",
			"Extension '{0}' was successfully installed.",
			"Cancelled installing extension '{0}'.",
			"Extension '{0}' is already installed.",
			"Updating the extension '{0}' to the version {1}",
			"Installing builtin extension '{0}' v{1}...",
			"Installing builtin extension '{0}'...",
			"Installing extension '{0}' v{1}...",
			"Installing extension '{0}'...",
			"Extension '{0}' v{1} was successfully installed.",
			"Cancelled installing extension '{0}'.",
			"A newer version of extension '{0}' v{1} is already installed. Use '--force' option to downgrade to older version.",
			"Extension '{0}' is a Built-in extension and cannot be uninstalled",
			"Extension '{0}' is marked as a Built-in extension by user. Please use '--force' option to uninstall it.",
			"Uninstalling {0}...",
			"Extension '{0}' was successfully uninstalled from {1}!",
			"Extension '{0}' was successfully uninstalled!",
			"Extension '{0}' is not installed on {1}.",
			"Extension '{0}' is not installed."
		],
		"vs/base/common/platform": [
			"_"
		],
		"vs/platform/extensionManagement/common/extensionsScannerService": [
			"Cannot read file {0}: {1}.",
			"Failed to parse {0}: [{1}, {2}] {3}.",
			"Invalid manifest file {0}: Not an JSON object.",
			"Failed to parse {0}: {1}.",
			"Invalid format {0}: JSON object expected.",
			"Failed to parse {0}: {1}.",
			"Invalid format {0}: JSON object expected."
		],
		"vs/platform/userDataProfile/common/userDataProfile": [
			"Default"
		],
		"vs/server/node/serverServices": [
			"Server"
		],
		"vs/workbench/api/common/extHostTelemetry": [
			"Extension Telemetry{0}"
		],
		"vs/workbench/api/common/extHostExtensionService": [
			"Cannot load test runner.",
			"Path {0} does not point to a valid extension test runner."
		],
		"vs/workbench/api/common/extHostWorkspace": [
			"Extension '{0}' failed to update workspace folders: {1}"
		],
		"vs/workbench/api/common/extHostTerminalService": [
			"Could not find the terminal with id {0} on the extension host"
		],
		"vs/workbench/api/common/extHostTunnelService": [
			"Private",
			"Public"
		],
		"vs/workbench/api/node/extHostDebugService": [
			"Debug Process"
		],
		"vs/workbench/api/common/extHostLogService": [
			"Extension Host (Remote)",
			"Extension Host (Worker)",
			"Extension Host"
		],
		"vs/base/common/errorMessage": [
			"{0}: {1}",
			"A system error occurred ({0})",
			"An unknown error occurred. Please consult the log for more details.",
			"An unknown error occurred. Please consult the log for more details.",
			"{0} ({1} errors in total)",
			"An unknown error occurred. Please consult the log for more details."
		],
		"vs/platform/contextkey/common/contextkey": [
			"Empty context key expression",
			"Did you forget to write an expression? You can also put 'false' or 'true' to always evaluate to false or true, respectively.",
			"'in' after 'not'.",
			"closing parenthesis ')'",
			"Unexpected token",
			"Did you forget to put && or || before the token?",
			"Unexpected end of expression",
			"Did you forget to put a context key?",
			"Expected: {0}\nReceived: '{1}'.",
			"Unexpected token. Hint: {0}",
			"Unexpected token."
		],
		"vs/platform/terminal/node/terminalProcess": [
			"Starting directory (cwd) \"{0}\" is not a directory",
			"Starting directory (cwd) \"{0}\" does not exist",
			"Path to shell executable \"{0}\" does not exist",
			"Path to shell executable \"{0}\" is not a file or a symlink"
		],
		"vs/platform/configuration/common/configurationRegistry": [
			"Default Language Configuration Overrides",
			"Configure settings to be overridden for the {0} language.",
			"Configure editor settings to be overridden for a language.",
			"This setting does not support per-language configuration.",
			"Configure editor settings to be overridden for a language.",
			"This setting does not support per-language configuration.",
			"Cannot register an empty property",
			"Cannot register '{0}'. This matches property pattern '\\\\[.*\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.",
			"Cannot register '{0}'. This property is already registered.",
			"Cannot register '{0}'. The associated policy {1} is already registered with {2}."
		],
		"vs/platform/shell/node/shellEnv": [
			"Unable to resolve your shell environment in a reasonable time. Please review your shell configuration and restart.",
			"Unable to resolve your shell environment: {0}",
			"Unexpected exit code from spawned shell (code {0}, signal {1})"
		],
		"vs/platform/extensions/common/extensionValidator": [
			"property publisher must be of type `string`.",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` is mandatory and must be of type `object`",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` can be omitted or must be of type `string[]`",
			"property `{0}` can be omitted or must be of type `string[]`",
			"property `{0}` should be omitted if the extension doesn't have a `{1}` or `{2}` property.",
			"property `{0}` can be defined only if property `main` is also defined.",
			"property `{0}` can be omitted or must be of type `string`",
			"Expected `main` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.",
			"property `{0}` can be omitted or must be of type `string`",
			"Expected `browser` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.",
			"Extension version is not semver compatible.",
			"Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.",
			"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.",
			"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.",
			"Extension is not compatible with Code {0}. Extension requires: {1}."
		],
		"vs/base/node/zip": [
			"Error extracting {0}. Invalid file.",
			"Incomplete. Found {0} of {1} entries",
			"{0} not found inside zip."
		],
		"vs/platform/extensionManagement/common/abstractExtensionManagementService": [
			"Marketplace is not enabled",
			"Can't install '{0}' extension since it was reported to be problematic.",
			"Can't install '{0}' extension since it was deprecated and the replacement extension '{1}' can't be found.",
			"The '{0}' extension is not available in {1} for {2}.",
			"Can't install release version of '{0}' extension because it has no release version.",
			"Can't install '{0}' extension because it is not compatible with the current version of {1} (version {2}).",
			"Cannot uninstall '{0}' extension. '{1}' extension depends on this.",
			"Cannot uninstall '{0}' extension. '{1}' and '{2}' extensions depend on this.",
			"Cannot uninstall '{0}' extension. '{1}', '{2}' and other extension depend on this.",
			"Cannot uninstall '{0}' extension . It includes uninstalling '{1}' extension and '{2}' extension depends on this.",
			"Cannot uninstall '{0}' extension. It includes uninstalling '{1}' extension and '{2}' and '{3}' extensions depend on this.",
			"Cannot uninstall '{0}' extension. It includes uninstalling '{1}' extension and '{2}', '{3}' and other extensions depend on this."
		],
		"vs/platform/extensionManagement/node/extensionManagementUtil": [
			"VSIX invalid: package.json is not a JSON file."
		],
		"vs/platform/files/common/io": [
			"File is too large to open"
		],
		"vs/base/common/jsonErrorMessages": [
			"Invalid symbol",
			"Invalid number format",
			"Property name expected",
			"Value expected",
			"Colon expected",
			"Comma expected",
			"Closing brace expected",
			"Closing bracket expected",
			"End of file expected"
		],
		"vs/platform/extensionManagement/common/extensionNls": [
			"Couldn't find message for key {0}."
		],
		"vs/platform/workspace/common/workspace": [
			"Code Workspace"
		],
		"vs/base/common/date": [
			"in {0}",
			"now",
			"{0} second ago",
			"{0} sec ago",
			"{0} seconds ago",
			"{0} secs ago",
			"{0} second",
			"{0} sec",
			"{0} seconds",
			"{0} secs",
			"{0} minute ago",
			"{0} min ago",
			"{0} minutes ago",
			"{0} mins ago",
			"{0} minute",
			"{0} min",
			"{0} minutes",
			"{0} mins",
			"{0} hour ago",
			"{0} hr ago",
			"{0} hours ago",
			"{0} hrs ago",
			"{0} hour",
			"{0} hr",
			"{0} hours",
			"{0} hrs",
			"{0} day ago",
			"{0} days ago",
			"{0} day",
			"{0} days",
			"{0} week ago",
			"{0} wk ago",
			"{0} weeks ago",
			"{0} wks ago",
			"{0} week",
			"{0} wk",
			"{0} weeks",
			"{0} wks",
			"{0} month ago",
			"{0} mo ago",
			"{0} months ago",
			"{0} mos ago",
			"{0} month",
			"{0} mo",
			"{0} months",
			"{0} mos",
			"{0} year ago",
			"{0} yr ago",
			"{0} years ago",
			"{0} yrs ago",
			"{0} year",
			"{0} yr",
			"{0} years",
			"{0} yrs"
		],
		"vs/workbench/contrib/tasks/common/tasks": [
			"Whether a task is currently running.",
			"Tasks",
			"Error: the task identifier '{0}' is missing the required property '{1}'. The task identifier will be ignored."
		],
		"vs/workbench/contrib/debug/common/abstractDebugAdapter": [
			"Timeout after {0} ms for '{1}'"
		],
		"vs/workbench/services/configurationResolver/common/variableResolver": [
			"Variable {0} can not be resolved. Please open an editor.",
			"Variable {0}: can not find workspace folder of '{1}'.",
			"Variable {0} can not be resolved. No such folder '{1}'.",
			"Variable {0} can not be resolved in a multi folder workspace. Scope this variable using ':' and a workspace folder name.",
			"Variable {0} can not be resolved. Please open a folder.",
			"Variable {0} can not be resolved because no environment variable name is given.",
			"Variable {0} can not be resolved because setting '{1}' not found.",
			"Variable {0} can not be resolved because '{1}' is a structured value.",
			"Variable {0} can not be resolved because no settings name is given.",
			"Variable {0} can not be resolved because the extension {1} is not installed.",
			"Variable {0} can not be resolved because no extension name is given.",
			"Variable {0} can not be resolved. UserHome path is not defined",
			"Variable {0} can not be resolved. Make sure to have a line selected in the active editor.",
			"Variable {0} can not be resolved. Make sure to have some text selected in the active editor.",
			"Variable {0} can not be resolved because the command has no value."
		],
		"vs/platform/externalTerminal/node/externalTerminalService": [
			"VS Code Console",
			"Script '{0}' failed with exit code {1}",
			"'{0}' not supported",
			"Press any key to continue...",
			"'{0}' failed with exit code {1}",
			"can't find terminal application '{0}'"
		],
		"vs/workbench/contrib/debug/node/debugAdapter": [
			"Debug adapter executable '{0}' does not exist.",
			"Cannot determine executable for debug adapter '{0}'.",
			"Unable to launch debug adapter from '{0}'.",
			"Unable to launch debug adapter."
		],
		"vs/workbench/services/remote/common/tunnelModel": [
			"Whether the Ports view is enabled.",
			"User Forwarded",
			"Auto Forwarded",
			"Local port {0} could not be used for forwarding to remote port {1}.\n\nThis usually happens when there is already another process using local port {0}.\n\nPort number {2} has been used instead.",
			"Statically Forwarded"
		],
		"vs/platform/contextkey/common/scanner": [
			"Did you mean {0}?",
			"Did you mean {0} or {1}?",
			"Did you mean {0}, {1} or {2}?",
			"Did you forget to open or close the quote?",
			"Did you forget to escape the '/' (slash) character? Put two backslashes before it to escape, e.g., '\\\\/'."
		],
		"vs/platform/environment/node/argvHelper": [
			"Option '{0}' is defined more than once. Using value '{1}'.",
			"Option '{0}' requires a non empty value. Ignoring the option.",
			"Option '{0}' is deprecated: {1}",
			"Warning: '{0}' is not in the list of known options for subcommand '{1}'",
			"Warning: '{0}' is not in the list of known options, but still passed to Electron/Chromium.",
			"Arguments in `--goto` mode should be in the format of `FILE(:LINE(:CHARACTER))`."
		],
		"vs/platform/terminal/common/terminalPlatformConfiguration": [
			"An optional set of arguments to run the shell executable with.",
			"Whether or not to replace the dynamic terminal title that detects what program is running with the static profile name.",
			"A codicon ID to associate with the terminal icon.",
			"A theme color ID to associate with the terminal icon.",
			"An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
			"A single path to a shell executable or an array of paths that will be used as fallbacks when one fails.",
			"A single path to a shell executable.",
			"A set of terminal profile customizations for {0} which allows adding, removing or changing how terminals are launched. Profiles are made up of a mandatory path, optional arguments and other presentation options.\n\nTo override an existing profile use its profile name as the key, for example:\n\n{1}\n\n{2}Read more about configuring profiles{3}.",
			"Integrated Terminal",
			"The terminal profile to use on Linux for automation-related terminal usage like tasks and debug.",
			"The terminal profile to use on macOS for automation-related terminal usage like tasks and debug.",
			"The terminal profile to use for automation-related terminal usage like tasks and debug. This setting will currently be ignored if {0} (now deprecated) is set.",
			"A profile source that will auto detect the paths to the shell. Note that non-standard executable locations are not supported and must be created manually in a new profile.",
			"The extension that contributed this profile.",
			"The id of the extension terminal",
			"The name of the extension terminal",
			"The extension that contributed this profile.",
			"The id of the extension terminal",
			"The name of the extension terminal",
			"The extension that contributed this profile.",
			"The id of the extension terminal",
			"The name of the extension terminal",
			"Controls whether or not WSL distros are shown in the terminal dropdown",
			"Whether new shells should inherit their environment from VS Code, which may source a login shell to ensure $PATH and other development variables are initialized. This has no effect on Windows.",
			"Controls the maximum amount of lines that will be restored when reconnecting to a persistent terminal session. Increasing this will restore more lines of scrollback at the cost of more memory and increase the time it takes to connect to terminals on start up. This setting requires a restart to take effect and should be set to a value less than or equal to `#terminal.integrated.scrollback#`.",
			"Whether to show hovers for links in the terminal output.",
			"A set of process names to ignore when using the {0} setting.",
			"Integrated Terminal",
			"The default terminal profile on Linux.",
			"The default terminal profile on macOS.",
			"The default terminal profile on Windows."
		],
		"vs/platform/telemetry/common/telemetryService": [
			"Controls {0} telemetry, first-party extension telemetry, and participating third-party extension telemetry. Some third party extensions might not respect this setting. Consult the specific extension's documentation to be sure. Telemetry helps us better understand how {0} is performing, where improvements need to be made, and how features are being used.",
			"Read more about the [data we collect]({0}).",
			"Read more about the [data we collect]({0}) and our [privacy statement]({1}).",
			"A full restart of the application is necessary for crash reporting changes to take effect.",
			"Crash Reports",
			"Error Telemetry",
			"Usage Data",
			"The following table outlines the data sent with each setting:",
			"****Note:*** If this setting is 'off', no telemetry will be sent regardless of other telemetry settings. If this setting is set to anything except 'off' and telemetry is disabled with deprecated settings, no telemetry will be sent.*",
			"Telemetry",
			"Sends usage data, errors, and crash reports.",
			"Sends general error telemetry and crash reports.",
			"Sends OS level crash reports.",
			"Disables all product telemetry.",
			"Telemetry",
			"Enable diagnostic data to be collected. This helps us to better understand how {0} is performing and where improvements need to be made.",
			"Enable diagnostic data to be collected. This helps us to better understand how {0} is performing and where improvements need to be made. [Read more]({1}) about what we collect and our privacy statement.",
			"If this setting is false, no telemetry will be sent regardless of the new setting's value. Deprecated in favor of the {0} setting."
		],
		"vs/workbench/common/editor": [
			"Text Editor",
			"Built-in",
			"Open Anyway",
			"Configure Limit"
		],
		"vs/workbench/services/extensions/common/extensionsUtil": [
			"Overwriting extension {0} with {1}.",
			"Overwriting extension {0} with {1}.",
			"Loading development extension at {0}"
		],
		"vs/workbench/services/search/common/queryBuilder": [
			"Workspace folder does not exist: {0}"
		],
		"vs/editor/common/languages": [
			"array",
			"boolean",
			"class",
			"constant",
			"constructor",
			"enumeration",
			"enumeration member",
			"event",
			"field",
			"file",
			"function",
			"interface",
			"key",
			"method",
			"module",
			"namespace",
			"null",
			"number",
			"object",
			"operator",
			"package",
			"property",
			"string",
			"struct",
			"type parameter",
			"variable",
			"{0} ({1})"
		],
		"vs/platform/markers/common/markers": [
			"Error",
			"Warning",
			"Info"
		],
		"vs/workbench/contrib/tasks/common/taskDefinitionRegistry": [
			"The actual task type. Please note that types starting with a '$' are reserved for internal usage.",
			"Additional properties of the task type",
			"Condition which must be true to enable this type of task. Consider using `shellExecutionSupported`, `processExecutionSupported`, and `customExecutionSupported` as appropriate for this task definition. See the [API documentation](https://code.visualstudio.com/api/extension-guides/task-provider#when-clause) for more information.",
			"The task type configuration is missing the required 'taskType' property",
			"Contributes task kinds"
		],
		"vs/workbench/api/common/extHostChatAgents2": [
			"Error from provider: {0}"
		],
		"vs/workbench/api/common/extHostDiagnostics": [
			"Not showing {0} further errors and warnings."
		],
		"vs/workbench/api/common/extHostNotebook": [
			"Unable to modify read-only file '{0}'",
			"File Modified Since"
		],
		"vs/workbench/api/common/extHostLanguageFeatures": [
			"Paste using '{0}' extension",
			"Drop using '{0}' extension"
		],
		"vs/workbench/api/common/extHostProgress": [
			"{0} (Extension)"
		],
		"vs/workbench/api/common/extHostStatusBar": [
			"{0} (Extension)",
			"Extension Status"
		],
		"vs/workbench/api/common/extHostTreeViews": [
			"Element with id {0} is already registered"
		],
		"vs/workbench/contrib/debug/common/debug": [
			"Debug type of the active debug session. For example 'python'.",
			"Debug type of the selected launch configuration. For example 'python'.",
			"State that the focused debug session is in. One of the following: 'inactive', 'initializing', 'stopped' or 'running'.",
			"Debug UX state. When there are no debug configurations it is 'simple', otherwise 'default'. Used to decide when to show welcome views in the debug viewlet.",
			"True when a debug session has been started at least once, false otherwise.",
			"True when debugging, false otherwise.",
			"True when focus is in the debug console, false otherwise.",
			"True when breakpoint editor zone widget is visible, false otherwise.",
			"True when focus is in the breakpoint editor zone widget, false otherwise.",
			"True when the BREAKPOINTS view is focused, false otherwise.",
			"True when the WATCH view is focused, false otherwsie.",
			"True when at least one watch expression exists, false otherwise.",
			"True when the VARIABLES views is focused, false otherwsie",
			"True when an expression input box is open in either the WATCH or the VARIABLES view, false otherwise.",
			"True when the input box has focus in the BREAKPOINTS view.",
			"Represents the item type of the focused element in the CALL STACK view. For example: 'session', 'thread', 'stackFrame'",
			"True when the session in the CALL STACK view is attach, false otherwise. Used internally for inline menus in the CALL STACK view.",
			"True when the focused item in the CALL STACK is stopped. Used internaly for inline menus in the CALL STACK view.",
			"True when the focused session in the CALL STACK view has exactly one thread. Used internally for inline menus in the CALL STACK view.",
			"Represents the item type of the focused element in the WATCH view. For example: 'expression', 'variable'",
			"Indicates whether the item in the view has an associated memory refrence.",
			"Represents the item type of the focused element in the BREAKPOINTS view. For example: 'breakpoint', 'exceptionBreakppint', 'functionBreakpoint', 'dataBreakpoint'",
			"True when the focused breakpoint supports conditions.",
			"True when the focused sessions supports the LOADED SCRIPTS view",
			"Represents the item type of the focused element in the LOADED SCRIPTS view.",
			"True when the focused session is 'attach'.",
			"True when the focused session is run without debugging.",
			"True when the focused session supports 'stepBack' requests.",
			"True when the focused session supports 'restartFrame' requests.",
			"True when the focused stack frame suppots 'restartFrame'.",
			"True when the focused session supports 'jumpToCursor' request.",
			"True when the focused session supports 'stepIntoTargets' request.",
			"True when at least one breakpoint exists.",
			"True when there is at least one debug extensions active.",
			"True when there is at least one debug extension installed and enabled.",
			"Represents the context the debug adapter sets on the focused variable in the VARIABLES view.",
			"True when the focused session supports 'setVariable' request.",
			"True when the focused session supports 'setExpression' request.",
			"True when the focused session supports to break when value changes.",
			"True when the focused breakpoint supports to break when value is accessed.",
			"True when the focused breakpoint supports to break when value is read.",
			"True when the focused session supports the terminate debuggee capability.",
			"True when the focused session supports the suspend debuggee capability.",
			"True when the focused variable has an 'evalauteName' field set.",
			"True when the focused variable is read-only.",
			"True when the exception widget is visible.",
			"True when there is more than 1 debug console.",
			"True when there is more than 1 active debug session.",
			"True when the focused sessions supports disassemble request.",
			"True when the Disassembly View is focused.",
			"True when the language in the current editor supports disassemble request.",
			"True when the focused stack frame has instruction pointer reference.",
			"Configured debug type '{0}' is installed but not supported in this environment.",
			"Controls when the internal Debug Console should open."
		],
		"vs/platform/dialogs/common/dialogs": [
			"&&Yes",
			"Cancel",
			"Cancel",
			"Cancel",
			"&&OK",
			"&&OK",
			"Cancel",
			"...1 additional file not shown",
			"...{0} additional files not shown"
		],
		"vs/platform/terminal/common/terminalProfiles": [
			"Automatically detect the default"
		],
		"vs/base/common/actions": [
			"(empty)"
		],
		"vs/workbench/services/extensions/common/extensionsRegistry": [
			"UI extension kind. In a remote window, such extensions are enabled only when available on the local machine.",
			"Workspace extension kind. In a remote window, such extensions are enabled only when available on the remote.",
			"Engine compatibility.",
			"For VS Code extensions, specifies the VS Code version that the extension is compatible with. Cannot be *. For example: ^0.10.5 indicates compatibility with a minimum VS Code version of 0.10.5.",
			"The publisher of the VS Code extension.",
			"The display name for the extension used in the VS Code gallery.",
			"The categories used by the VS Code gallery to categorize the extension.",
			"Use 'Programming  Languages' instead",
			"Banner used in the VS Code marketplace.",
			"The banner color on the VS Code marketplace page header.",
			"The color theme for the font used in the banner.",
			"All contributions of the VS Code extension represented by this package.",
			"Sets the extension to be flagged as a Preview in the Marketplace.",
			"Use `enabledApiProposals` instead.",
			"Enable API proposals to try them out. Only valid **during development**. Extensions **cannot be published** with this property. For more details visit: https://code.visualstudio.com/api/advanced-topics/using-proposed-api",
			"Describe the API provided by this extension. For more details visit: https://code.visualstudio.com/api/advanced-topics/remote-extensions#handling-dependencies-with-remote-extensions",
			"Give up entirely the ability to export any APIs. This allows other extensions that depend on this extension to run in a separate extension host process or in a remote machine.",
			"Activation events for the VS Code extension.",
			"An activation event emmited when a webview is loaded of a certain viewType",
			"An activation event emitted whenever a file that resolves to the specified language gets opened.",
			"An activation event emitted whenever the specified command gets invoked.",
			"An activation event emitted whenever a user is about to start debugging or about to setup debug configurations.",
			"An activation event emitted whenever a \"launch.json\" needs to be created (and all provideDebugConfigurations methods need to be called).",
			"An activation event emitted whenever a list of all debug configurations needs to be created (and all provideDebugConfigurations methods for the \"dynamic\" scope need to be called).",
			"An activation event emitted whenever a debug session with the specific type is about to be launched (and a corresponding resolveDebugConfiguration method needs to be called).",
			"An activation event emitted whenever a debug session with the specific type is about to be launched and a debug protocol tracker might be needed.",
			"An activation event emitted whenever a folder is opened that contains at least a file matching the specified glob pattern.",
			"An activation event emitted after the start-up finished (after all `*` activated extensions have finished activating).",
			"An activation event emitted whenever tasks of a certain type need to be listed or resolved.",
			"An activation event emitted whenever a file or folder is accessed with the given scheme.",
			"An activation event emitted whenever an edit session is accessed with the given scheme.",
			"An activation event emitted whenever a search is started in the folder with the given scheme.",
			"An activation event emitted whenever the specified view is expanded.",
			"An activation event emitted whenever a system-wide Uri directed towards this extension is open.",
			"An activation event emitted whenever a external uri (such as an http or https link) is being opened.",
			"An activation event emitted whenever the specified custom editor becomes visible.",
			"An activation event emitted whenever the specified notebook document is opened.",
			"An activation event emitted whenever sessions are requested from the specified authentication provider.",
			"An activation event emitted whenever a notebook output renderer is used.",
			"An activation event emitted when a specific terminal profile is launched.",
			"An activation event emitted when a command matches the selector associated with this ID",
			"An activation event emitted when a specified walkthrough is opened.",
			"An activation event emitted when the issue reporter is opened.",
			"An activation event emitted on VS Code startup. To ensure a great end user experience, please use this activation event in your extension only when no other activation events combination works in your use-case.",
			"Array of badges to display in the sidebar of the Marketplace's extension page.",
			"Badge image URL.",
			"Badge link.",
			"Badge description.",
			"Controls the Markdown rendering engine used in the Marketplace. Either github (default) or standard.",
			"Controls the Q&A link in the Marketplace. Set to marketplace to enable the default Marketplace Q & A site. Set to a string to provide the URL of a custom Q & A site. Set to false to disable Q & A altogether.",
			"Dependencies to other extensions. The identifier of an extension is always ${publisher}.${name}. For example: vscode.csharp.",
			"A set of extensions that can be installed together. The identifier of an extension is always ${publisher}.${name}. For example: vscode.csharp.",
			"Define the kind of an extension. `ui` extensions are installed and run on the local machine while `workspace` extensions run on the remote.",
			"Define an extension which can run only on the local machine when connected to remote window.",
			"Define an extension which can run only on the remote machine when connected remote window.",
			"Define an extension which can run on either side, with a preference towards running on the local machine.",
			"Define an extension which can run on either side, with a preference towards running on the remote machine.",
			"Define an extension which cannot run in a remote context, neither on the local, nor on the remote machine.",
			"Declare the set of supported capabilities by the extension.",
			"Declares whether the extension should be enabled in virtual workspaces. A virtual workspace is a workspace which is not backed by any on-disk resources. When false, this extension will be automatically disabled in virtual workspaces. Default is true.",
			"Declares the level of support for virtual workspaces by the extension.",
			"The extension will be enabled in virtual workspaces with some functionality disabled.",
			"The extension will be enabled in virtual workspaces with all functionality enabled.",
			"The extension will not be enabled in virtual workspaces.",
			"A description of how virtual workspaces affects the extensions behavior and why it is needed. This only applies when `supported` is not `true`.",
			"Declares how the extension should be handled in untrusted workspaces.",
			"Declares the level of support for untrusted workspaces by the extension.",
			"The extension will be enabled in untrusted workspaces with some functionality disabled.",
			"The extension will be enabled in untrusted workspaces with all functionality enabled.",
			"The extension will not be enabled in untrusted workspaces.",
			"A list of configuration keys contributed by the extension that should not use workspace values in untrusted workspaces.",
			"A description of how workspace trust affects the extensions behavior and why it is needed. This only applies when `supported` is not `true`.",
			"Specify the location from where users can sponsor your extension.",
			"URL from where users can sponsor your extension. It must be a valid URL with a HTTP or HTTPS protocol. Example value: https://github.com/sponsors/nvaccess",
			"Script executed before the package is published as a VS Code extension.",
			"Uninstall hook for VS Code extension. Script that gets executed when the extension is completely uninstalled from VS Code which is when VS Code is restarted (shutdown and start) after the extension is uninstalled. Only Node scripts are supported.",
			"The path to a 128x128 pixel icon.",
			"The relative path to a folder containing localization (bundle.l10n.*.json) files. Must be specified if you are using the vscode.l10n API.",
			"The pricing information for the extension. Can be Free (default) or Trial. For more details visit: https://code.visualstudio.com/api/working-with-extensions/publishing-extension#extension-pricing-label",
			"API proposals that the respective extensions can freely use."
		],
		"vs/workbench/services/editor/common/editorResolverService": [
			"Configure [glob patterns](https://aka.ms/vscode-glob-patterns) to editors (for example `\"*.hex\": \"hexEditor.hexedit\"`). These have precedence over the default behavior."
		],
		"vs/workbench/common/views": [
			"Views",
			"Default view icon.",
			"A view with id '{0}' is already registered",
			"No tree view with id '{0}' registered."
		],
		"vs/workbench/common/configuration": [
			"Application",
			"Workbench",
			"Security",
			"UNC host names must not contain backslashes.",
			"A set of UNC host names (without leading or trailing backslash, for example `192.168.0.1` or `my-server`) to allow without user confirmation. If a UNC host is being accessed that is not allowed via this setting or has not been acknowledged via user confirmation, an error will occur and the operation stopped. A restart is required when changing this setting. Find out more about this setting at https://aka.ms/vscode-windows-unc.",
			"If enabled, only allows access to UNC host names that are allowed by the `#security.allowedUNCHosts#` setting or after user confirmation. Find out more about this setting at https://aka.ms/vscode-windows-unc."
		],
		"vs/platform/theme/common/iconRegistry": [
			"The id of the font to use. If not set, the font that is defined first is used.",
			"The font character associated with the icon definition.",
			"Icon for the close action in widgets.",
			"Icon for goto previous editor location.",
			"Icon for goto next editor location."
		]
	},
	"bundles": {
		"vs/server/node/server.main": [
			"vs/base/common/actions",
			"vs/base/common/date",
			"vs/base/common/errorMessage",
			"vs/base/common/jsonErrorMessages",
			"vs/base/common/platform",
			"vs/base/node/zip",
			"vs/editor/common/languages",
			"vs/platform/configuration/common/configurationRegistry",
			"vs/platform/contextkey/common/contextkey",
			"vs/platform/contextkey/common/scanner",
			"vs/platform/environment/node/argv",
			"vs/platform/environment/node/argvHelper",
			"vs/platform/extensionManagement/common/abstractExtensionManagementService",
			"vs/platform/extensionManagement/common/extensionManagement",
			"vs/platform/extensionManagement/common/extensionManagementCLI",
			"vs/platform/extensionManagement/common/extensionNls",
			"vs/platform/extensionManagement/common/extensionsScannerService",
			"vs/platform/extensionManagement/node/extensionManagementService",
			"vs/platform/extensionManagement/node/extensionManagementUtil",
			"vs/platform/extensions/common/extensionValidator",
			"vs/platform/files/common/fileService",
			"vs/platform/files/common/files",
			"vs/platform/files/common/io",
			"vs/platform/files/node/diskFileSystemProvider",
			"vs/platform/languagePacks/common/languagePacks",
			"vs/platform/markers/common/markers",
			"vs/platform/request/common/request",
			"vs/platform/shell/node/shellEnv",
			"vs/platform/telemetry/common/telemetryService",
			"vs/platform/terminal/common/terminalPlatformConfiguration",
			"vs/platform/terminal/common/terminalProfiles",
			"vs/platform/userDataProfile/common/userDataProfile",
			"vs/platform/workspace/common/workspace",
			"vs/server/node/remoteExtensionHostAgentCli",
			"vs/server/node/serverEnvironmentService",
			"vs/server/node/serverServices",
			"vs/workbench/api/common/extHostTelemetry",
			"vs/workbench/common/editor",
			"vs/workbench/services/configurationResolver/common/variableResolver",
			"vs/workbench/services/extensions/common/extensionsUtil"
		],
		"vs/server/node/server.cli": [
			"vs/base/common/platform",
			"vs/platform/environment/node/argv"
		],
		"vs/workbench/api/node/extensionHostProcess": [
			"vs/base/common/actions",
			"vs/base/common/date",
			"vs/base/common/errorMessage",
			"vs/base/common/platform",
			"vs/editor/common/config/editorOptions",
			"vs/editor/common/languages",
			"vs/platform/configuration/common/configurationRegistry",
			"vs/platform/contextkey/common/contextkey",
			"vs/platform/contextkey/common/scanner",
			"vs/platform/dialogs/common/dialogs",
			"vs/platform/extensionManagement/common/extensionManagement",
			"vs/platform/extensions/common/extensionValidator",
			"vs/platform/externalTerminal/node/externalTerminalService",
			"vs/platform/files/common/files",
			"vs/platform/files/common/io",
			"vs/platform/files/node/diskFileSystemProvider",
			"vs/platform/markers/common/markers",
			"vs/platform/theme/common/iconRegistry",
			"vs/platform/userDataProfile/common/userDataProfile",
			"vs/platform/workspace/common/workspace",
			"vs/workbench/api/common/extHostChatAgents2",
			"vs/workbench/api/common/extHostDiagnostics",
			"vs/workbench/api/common/extHostExtensionService",
			"vs/workbench/api/common/extHostLanguageFeatures",
			"vs/workbench/api/common/extHostLogService",
			"vs/workbench/api/common/extHostNotebook",
			"vs/workbench/api/common/extHostProgress",
			"vs/workbench/api/common/extHostStatusBar",
			"vs/workbench/api/common/extHostTelemetry",
			"vs/workbench/api/common/extHostTerminalService",
			"vs/workbench/api/common/extHostTreeViews",
			"vs/workbench/api/common/extHostTunnelService",
			"vs/workbench/api/common/extHostWorkspace",
			"vs/workbench/api/node/extHostDebugService",
			"vs/workbench/common/configuration",
			"vs/workbench/common/editor",
			"vs/workbench/common/views",
			"vs/workbench/contrib/debug/common/abstractDebugAdapter",
			"vs/workbench/contrib/debug/common/debug",
			"vs/workbench/contrib/debug/node/debugAdapter",
			"vs/workbench/contrib/tasks/common/taskDefinitionRegistry",
			"vs/workbench/contrib/tasks/common/tasks",
			"vs/workbench/services/configurationResolver/common/variableResolver",
			"vs/workbench/services/editor/common/editorResolverService",
			"vs/workbench/services/extensions/common/extensionsRegistry",
			"vs/workbench/services/remote/common/tunnelModel",
			"vs/workbench/services/search/common/queryBuilder"
		],
		"vs/platform/files/node/watcher/watcherMain": [
			"vs/base/common/errorMessage",
			"vs/base/common/platform",
			"vs/platform/files/common/files"
		],
		"vs/platform/terminal/node/ptyHostMain": [
			"vs/base/common/date",
			"vs/base/common/errorMessage",
			"vs/base/common/platform",
			"vs/platform/contextkey/common/contextkey",
			"vs/platform/contextkey/common/scanner",
			"vs/platform/environment/node/argv",
			"vs/platform/files/common/files",
			"vs/platform/terminal/node/ptyHostMain",
			"vs/platform/terminal/node/ptyService",
			"vs/platform/terminal/node/terminalProcess"
		]
	}
}