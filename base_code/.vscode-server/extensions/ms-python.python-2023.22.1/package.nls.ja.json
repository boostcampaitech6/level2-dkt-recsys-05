{"python.EnableREPLSmartSend.description":"Python REPL 用の Smart Send を切り替えます。Smart Send を使用すると、コードの実行可能な最小ブロックを Shift+Enter の REPL に送信し、それに応じてカーソルを移動できます。","python.activeStateToolPath.description":"ActiveState ランタイム用の State Tool 実行可能ファイルへのパス (バージョン 0.36 以降)。","python.autoComplete.extraPaths.description":"オートコンプリート エンジンでインポートする必要があるライブラリなどへのパスのリスト。たとえば、Google App SDK を使用する場合、パスはシステム パスにないため、このリストに追加する必要があります。","python.command.python.analysis.restartLanguageServer.title":"言語サーバーの再起動","python.command.python.clearCacheAndReload.title":"キャッシュのクリアとウィンドウの再読み込み","python.command.python.clearWorkspaceInterpreter.title":"ワークスペース インタープリター設定をクリア","python.command.python.configureTests.title":"テストを構成する","python.command.python.createEnvironment.title":"環境の作成...","python.command.python.createNewFile.title":"新しい Python ファイル","python.command.python.createTerminal.title":"ターミナルを作成する","python.command.python.debugInTerminal.title":"Python ファイルのデバッグ","python.command.python.enableSourceMapSupport.title":"拡張機能デバッグのソース マップ サポートを有効にする","python.command.python.execInDedicatedTerminal.title":"専用ターミナルで Python ファイルを実行する","python.command.python.execInTerminal.title":"ターミナルで Python ファイルを実行する","python.command.python.execInTerminalIcon.title":"新しい Python ファイル","python.command.python.execSelectionInDjangoShell.title":"Django シェルでの選択範囲/行の実行","python.command.python.execSelectionInTerminal.title":"Python ターミナルで選択範囲/行を実行する","python.command.python.installJupyter.title":"Jupyter 拡張機能のインストール","python.command.python.launchTensorBoard.title":"Tensorboard を起動する","python.command.python.refreshTensorBoard.title":"TensorBoard を更新する","python.command.python.reportIssue.title":"問題を英語で報告...","python.command.python.setInterpreter.title":"インタープリターを選択","python.command.python.startREPL.title":"Start REPL","python.command.python.viewLanguageServerOutput.title":"言語サーバー出力を表示する","python.command.python.viewOutput.title":"出力の表示","python.command.testing.rerunFailedTests.title":"失敗したテストの再実行","python.condaPath.description":"アクティブ化に使用する Conda 実行可能ファイルへのパス (バージョン 4.4 以降)。","python.createEnvironment.contentButton.description":"'requirements.txt' またはその他の依存関係ファイルのエディターの [環境の作成] ボタンを表示または非表示にします。","python.createEnvironment.trigger.description":"現在のプロジェクトに環境の作成が必要かどうかを検出する","python.defaultInterpreterPath.description":"拡張機能が初めて読み込まれるときに使用する既定の Python へのパス。ワークスペースにインタープリターが選択されると使用されなくなります。[こちら](https://aka.ms/AAfekmf) を参照して、これがいつ使用されるかを理解してください","python.diagnostics.sourceMapsEnabled.description":"エラー ログで意味のあるスタック トレースのソース マップ サポートを有効にします。","python.editor.context.submenu.runPython":"Python の実行","python.editor.context.submenu.runPythonInteractive":"インタラクティブ ウィンドウで実行","python.envFile.description":"環境変数定義が含まれているファイルへの絶対パス。","python.experiments.All.description":"すべての実験の結合リスト。","python.experiments.enabled.description":"Python 拡張機能で A/B テストの実験を有効にします。有効にすると、提案された拡張機能や機能に含まれる可能性があります。","python.experiments.optInto.description":"オプトインする実験のリスト。空の場合、ユーザーには既定の実験グループが割り当てられます。詳細については、[こちら](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) を参照してください。","python.experiments.optOutFrom.description":"オプトアウトする実験の一覧。空の場合、ユーザーには既定の実験グループが割り当てられます。詳細については、[こちら](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) を参照してください。","python.experiments.pythonDiscoveryUsingWorkers.description":"インタープリターを検出するときにワーカー スレッドを使用して大量の計算を実行できるようにします。","python.experiments.pythonPromptNewToolsExt.description":"Python プロンプトの新しいツール拡張機能の実験を表します。","python.experiments.pythonREPLSmartSend.description":"Python REPL Smart Send 実験を表します。","python.experiments.pythonRecommendTensorboardExt.description":"Tensorboard 拡張機能のレコメンデーションを示します。","python.experiments.pythonSurveyNotification.description":"Python アンケート通知の実験を表します。","python.experiments.pythonTerminalEnvVarActivation.description":"アクティブ化コマンドを送信する代わりに、環境変数を使用してターミナルをアクティブ化できるようにします。","python.experiments.pythonTestAdapter.description":"Python テスト アダプターの実験を示します。","python.globalModuleInstallation.description":"環境を使用しない場合に Python モジュールをグローバルにインストールするかどうか。","python.interpreter.infoVisibility.always.description":"常に情報を表示します。","python.interpreter.infoVisibility.description":"選択したインタープリターをステータス バーに表示するタイミングをコントロールします。","python.interpreter.infoVisibility.never.description":"情報を表示しません。","python.interpreter.infoVisibility.onPythonRelated.description":"Python 関連ファイルが開かれている場合にのみ情報を表示します。","python.languageServer.defaultDescription":"言語サーバーを自動的に選択する: インストールされて使用可能な場合は Pylance、それ以外の場合は、Jedi にフォールバックします。","python.languageServer.description":"言語サーバーの種類を定義します。","python.languageServer.jediDescription":"言語サーバーとして言語サーバー プロトコル (LSP) の背後で Jedi を使用します。","python.languageServer.noneDescription":"言語サーバーの機能を無効にします。","python.languageServer.pylanceDescription":"言語サーバーとして Pylance を使用します。","python.logging.level.deprecation":"この設定は非推奨です。ログ レベルを設定するには、コマンド 'Developer: Set Log Level...' を使用してください。","python.logging.level.description":"拡張機能がログに記録するログ レベルは、既定で `error` になります","python.menu.createNewFile.title":"Python ファイル","python.missingPackage.severity.description":"requirements.txt または pyproject.toml で見つからないパッケージの重要度を設定します","python.pipenvPath.description":"アクティブ化に使用する pipenv 実行可能ファイルへのパス。","python.poetryPath.description":"poetry 実行可能ファイルへのパス。","python.tensorBoard.logDirectory.deprecationMessage":"Tensorboard のサポートは、拡張機能 Tensorboard 拡張機能に移行されました。代わりに、設定 'tensorBoard.logDirectory' を使用します。","python.tensorBoard.logDirectory.description":"TensorBoard の起動時にログ ディレクトリ プロンプトをスキップするには、この設定を優先する TensorBoard ログ ディレクトリに設定します。","python.tensorBoard.logDirectory.markdownDeprecationMessage":"Tensorboard のサポートは拡張機能 [Tensorboard 拡張機能](https://marketplace.visualstudio.com/items?itemName=ms-toolsai.tensorboard) に移行されました。代わりに、設定 'tensorBoard.logDirectory' を使用します。","python.terminal.activateEnvInCurrentTerminal.description":"拡張機能の読み込み時に、現在のターミナルで Python 環境をアクティブにします。","python.terminal.activateEnvironment.description":"作成されたすべてのターミナルで Python 環境をアクティブ化します。","python.terminal.executeInFileDir.description":"ターミナルでファイルを実行する場合、現在開いているフォルダーではなく、ファイルのディレクトリで execute を使用するかどうか。","python.terminal.focusAfterLaunch.description":"Python ターミナルを起動するときに、ターミナルにカーソルを合わせるかどうか。","python.terminal.launchArgs.description":"ターミナルでファイルを実行するときに使用する Python 起動引数。","python.testing.autoTestDiscoverOnSaveEnabled.description":"テスト ファイルを保存するときに、自動実行テスト検出を有効にします。","python.testing.cwd.description":"テストの作業ディレクトリ (省略可能)。","python.testing.debugPort.description":"テストのデバッグに使用されるポート番号。","python.testing.promptToConfigure.description":"潜在的なテスト ディレクトリが検出された場合は、テスト フレームワークを構成するように求められます。","python.testing.pytestArgs.description":"引数が渡されました。各引数は配列内の個別の項目です。","python.testing.pytestEnabled.description":"pytest を使用したテストを有効にします。","python.testing.pytestPath.description":"pytest (pytest) へのパスです。この設定を変更して完全なパスを含めることで、カスタム バージョンの pytest を使用できます。","python.testing.unittestArgs.description":"引数が渡されました。各引数は配列内の個別の項目です。","python.testing.unittestEnabled.description":"unittest を使用したテストを有効にします。","python.venvFolders.description":"仮想環境を検索するホーム ディレクトリ内のフォルダー (既定では pyenv、direnv、virtualenvwrapper をサポート)。","python.venvPath.description":"仮想環境のリストを含むフォルダーへのパス (例: ~/.pyenv、~/Envs、~/.virtualenvs)。","walkthrough.pythonDataScienceWelcome.description":"Python を使用してデータ サイエンス プロジェクトを開始するための最初の手順です。","walkthrough.pythonDataScienceWelcome.title":"データ サイエンス用の Python で開始する","walkthrough.pythonWelcome.description":"Python の拡張機能で提供されるすべての強力なツールと機能を使用し、Python プロジェクトを設定するための最初の手順です。","walkthrough.pythonWelcome.title":"Python 開発による開始する","walkthrough.step.python.createEnvironment.altText":"コマンド パレットから Python 環境を作成しています","walkthrough.step.python.createEnvironment.description":"Python プロジェクトの環境を作成します。\r\n[環境の作成](command:python.createEnvironment)\r\n**ヒント**: [コマンド パレット](command:workbench.action.showCommands) で ``Python: Create Environment`` コマンドを実行します。\r\n 🔍 詳細については、[ドキュメント](https://aka.ms/pythonenvs) をご覧ください。","walkthrough.step.python.createEnvironment.description2":"Python プロジェクトの環境を作成するか、Python インタープリターの選択](command:python.setInterpreter) を使用して既存の環境を選択します。\r\n[環境の作成](command:python.createEnvironment)\r\n**ヒント**: [コマンド パレット](command:workbench.action.showCommands) で ``Python: Create Environment`` コマンドを実行します。","walkthrough.step.python.createEnvironment.title":"Python 環境を作成する ","walkthrough.step.python.createEnvironment.title2":"Python 環境を作成または選択する ","walkthrough.step.python.createNewNotebook.altText":"新しい Jupyter ノートブックを作成しています","walkthrough.step.python.createNewNotebook.description":"エクスプローラーで右クリックし、拡張子が .ipynb の新しいファイルを作成します。または、[コマンド パレット] (command:workbench.action.showCommands) を開いて\r\n``Jupyter: Create New Blank Notebook``\r\n[新しい Jupyter Notebook の作成](command:toSide:jupyter.createnewnotebook)\r\n コマンドを実行します。 既存のプロジェクトがある場合は、[フォルダーを開く] (command:workbench.action.files.openFolder) したり、GitHub からプロジェクトを複製したりすることもできます: [Git レポジトリの複製](command:git.clone)。","walkthrough.step.python.createNewNotebook.title":"Jupyter ノートブックを作成または開く","walkthrough.step.python.createPythonFile.altText":"Python プロジェクトで Python ファイルまたはフォルダーを開きます。","walkthrough.step.python.createPythonFile.description":"Python ファイルを [開く](command:toSide:workbench.action.files.openFile) または [作成](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D) します。\".py\" 拡張子を使用して保存してください。\r\n[Python ファイルの作成](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D)","walkthrough.step.python.createPythonFile.title":"Python ファイルを作成する","walkthrough.step.python.createPythonFolder.description":"[開く](command:workbench.action.files.openFolder) または、プロジェクト フォルダーを作成してください。\r\n[プロジェクト フォルダーの作成](command:workbench.action.files.openFolder)","walkthrough.step.python.createPythonFolder.title":"Python プロジェクト フォルダーを開く","walkthrough.step.python.dataScienceLearnMore.altText":"ドキュメント ページとメーリング リスト のリソースを表す画像。","walkthrough.step.python.dataScienceLearnMore.description":"📒 [Jupyter 拡張機能] を見てみましょう。 (command:workbench.extensions.search?\"ms-toolsai.jupyter\") 機能。[Command Palette] (command:workbench.action.showCommands) を使用して、 \"Jupyter\" を検索します。\r\n 🏃🏻 [チュートリアル](https://aka.ms/AAdjzpd) でその他の機能をご確認ください。\r\n[詳細情報](https://aka.ms/AAdar6q)","walkthrough.step.python.dataScienceLearnMore.title":"続きを読む","walkthrough.step.python.installJupyterExt.altText":"新しい Jupyter ノートブックを作成しています","walkthrough.step.python.installJupyterExt.description":"まだインストールしていない場合は、[Jupyter 拡張機能](command:workbench.extensions.search?\"ms-toolsai.jupyter\") をインストールして VS Code のノートブック エクスペリエンスを最大限に活用できます。\r\n\r\n[Jupyter 拡張機能の検索](command:workbench.extensions.search?ms-toolsai.jupyter\")","walkthrough.step.python.installJupyterExt.title":"Jupyter 拡張機能のインストール","walkthrough.step.python.installPythonLinux.description":"Python 拡張機能を使用するには Python をインストールする必要があります。ターミナルから Python 3 をインストールします。\r\n[terminal より Python をインストール](command:python.installPythonOnLinux)\r\n","walkthrough.step.python.installPythonLinux.title":"Python をインストールする","walkthrough.step.python.installPythonMac.description":"Python 拡張機能を使用するには Python をインストールする必要があります。ターミナルから Python 3 をインストールします。\r\n[Brewより Python をインストール](command:python.installPythonOnMac)\r\n","walkthrough.step.python.installPythonMac.title":"Python をインストールする","walkthrough.step.python.installPythonWin8.description":"Python 拡張機能を使用するには Python をインストールする必要があります。Python [python.org より](https://www.python.org/downloads) をインストールします。\r\n\r\n[Python のインストール](https://www.python.org/downloads)\r\n","walkthrough.step.python.installPythonWin8.title":"Python をインストールする","walkthrough.step.python.learnMoreWithDS.altText":"ドキュメント ページとメーリング リスト のリソースを表す画像。","walkthrough.step.python.learnMoreWithDS.description":"🎨 [コマンド パレット](command:workbench.action.showCommands) で \"Python\" を検索して、Python 拡張機能が提供するすべての機能を見てみてください。\r\n 📈 Python での [データ サイエンス](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) の使用開始に関する詳細情報。\r\n ✨ 最新の機能の詳細については、[リリース ノート](https://aka.ms/AA8dxtb) をご覧ください。\r\n \r\n[詳細情報](https://aka.ms/AA8dqti)","walkthrough.step.python.learnMoreWithDS.description2":"~D83C;~DFA8; [コマンド パレット](command:workbench.action.showCommands) で 「Python」を探して、Python 拡張機能が提供するすべての機能を調べてください。 \r\n~D83D;~DCC8; [データ サイエンス](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) をPythonで実行します。 \r\n ✨ 最新の機能の詳細については、[リリース ノート](https://aka.ms/AA8dxtb) を参照してください。 \r\n\r\n[Python チュートリアルを一緒にフォロー](https://aka.ms/AA8dqti)","walkthrough.step.python.learnMoreWithDS.title":"その他のリソースを確認する","walkthrough.step.python.openInteractiveWindow.altText":"Python インタラクティブ ウィンドウを開いています","walkthrough.step.python.openInteractiveWindow.description":"Python インタラクティブ ウィンドウは Python シェルであり、Python コードの結果を実行して表示できます。``'#%%'`` と入力すると、Python ファイルにセルを作成できます。\r\n\r\nインタラクティブ ウィンドウをいつでも開くには、[コマンド パレット](command:workbench.action.showCommands) を開き、コマンド \r\n'``Jupyter: Create Interactive Window`` を実行します。\r\n[インタラクティブ ウィンドウを開く](command:jupyter.createnewinteractive)","walkthrough.step.python.openInteractiveWindow.title":"Python インタラクティブ ウィンドウを開く","walkthrough.step.python.runAndDebug.altText":"F5 または右上の再生ボタンを使用して VS Code で実行およびデバッグする方法。","walkthrough.step.python.runAndDebug.description":"Python ファイルを開いてエディターの右上にある [再生] ボタンをクリックするか、ファイル上で F5 キーを押し、[Python ファイル] を選択してデバッガーで実行します。\r\n  \r\n[詳細情報](https://code.visualstudio.com/docs/python/python-tutorial#_run-hello-world)","walkthrough.step.python.runAndDebug.title":"お使いの Python ファイルを実行してデバッグする","walkthrough.step.python.selectInterpreter.altText":"ステータス バーから Python インタープリターを選択しています","walkthrough.step.python.selectInterpreter.description":"Python プロジェクトに使用する Python インタープリター/環境を選択します。\r\n[Python インタープリターの選択](command:python.setInterpreter)\r\n**ヒント**: [コマンド パレット](command:workbench.action.showCommands) で ``Python: Select Interpreter`` コマンドを実行します。","walkthrough.step.python.selectInterpreter.title":"Python インタープリターの選択"}
